{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww35640\viewh19780\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <style>\
* \{\
margin: 0;\
padding: 0;\
box-sizing: border-box;\
\}\
\
:root \{\
--midnight: #013D5A;\
--lionsmane: #FCF3E3;\
--celeste: #BDD3CE;\
--herb: #708C69;\
--marigold: #F4A250;\
--yellow-bg: #FFD54C;\
--success: #28a745;\
--warning: #ffc107;\
--danger: #dc3545;\
--info: #17a2b8;\
--white: #ffffff;\
--light-gray: #f8f9fa;\
--dark-gray: #6c757d;\
\}\
\
body \{\
font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;\
background: var(--yellow-bg);\
min-height: 100vh;\
overflow-x: hidden;\
line-height: 1.6;\
color: #333;\
\}\
\
/* Layout */\
.app-container \{\
display: flex;\
min-height: 100vh;\
position: relative;\
\}\
\
/* Sidebar */\
.sidebar \{\
width: 280px;\
background: linear-gradient(180deg, var(--midnight) 0%, var(--herb) 100%);\
color: white;\
position: fixed;\
height: 100vh;\
overflow-y: auto;\
overflow-x: hidden;\
z-index: 1000;\
box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);\
transition: width 0.3s ease;\
\}\
\
.sidebar.collapsed \{\
width: 80px;\
\}\
\
.sidebar-header \{\
padding: 30px 20px;\
background: rgba(0, 0, 0, 0.2);\
border-bottom: 1px solid rgba(255, 255, 255, 0.1);\
display: flex;\
align-items: center;\
gap: 15px;\
position: relative;\
\}\
\
.logo \{\
width: 50px;\
height: 50px;\
background: var(--marigold);\
border-radius: 50%;\
display: flex;\
align-items: center;\
justify-content: center;\
font-size: 1.5em;\
color: var(--midnight);\
font-weight: 800;\
flex-shrink: 0;\
\}\
\
.logo-text \{\
font-size: 1.3em;\
font-weight: 700;\
transition: opacity 0.3s ease, width 0.3s ease;\
white-space: nowrap;\
overflow: hidden;\
\}\
\
.sidebar.collapsed .logo-text \{\
opacity: 0;\
width: 0;\
\}\
\
.sidebar-toggle \{\
position: absolute;\
top: 40px;\
right: -18px;\
width: 36px;\
height: 36px;\
background: var(--marigold);\
border: none;\
border-radius: 50%;\
color: var(--midnight);\
cursor: pointer;\
display: flex;\
align-items: center;\
justify-content: center;\
font-weight: bold;\
font-size: 1.2em;\
box-shadow: 0 4px 15px rgba(244, 162, 80, 0.4);\
transition: transform 0.3s ease;\
z-index: 1001;\
\}\
\
.sidebar-toggle:hover \{\
transform: scale(1.1);\
\}\
\
/* Navigation */\
.nav-menu \{\
padding: 25px 0;\
\}\
\
.nav-section \{\
margin-bottom: 30px;\
\}\
\
.nav-section-title \{\
padding: 0 20px 10px;\
font-size: 0.75em;\
text-transform: uppercase;\
letter-spacing: 1px;\
opacity: 0.7;\
font-weight: 600;\
transition: opacity 0.3s ease;\
\}\
\
.sidebar.collapsed .nav-section-title \{\
opacity: 0;\
\}\
\
.nav-item \{\
display: flex;\
align-items: center;\
padding: 14px 20px;\
color: rgba(255, 255, 255, 0.9);\
text-decoration: none;\
transition: all 0.3s ease;\
position: relative;\
cursor: pointer;\
border: none;\
background: none;\
width: 100%;\
text-align: left;\
font-size: 14px;\
font-family: inherit;\
\}\
\
.nav-item:hover \{\
background: rgba(255, 255, 255, 0.1);\
color: white;\
padding-left: 25px;\
\}\
\
.nav-item.active \{\
background: rgba(244, 162, 80, 0.2);\
color: var(--marigold);\
font-weight: 600;\
\}\
\
.nav-item.active::before \{\
content: '';\
position: absolute;\
left: 0;\
top: 0;\
bottom: 0;\
width: 4px;\
background: var(--marigold);\
\}\
\
.nav-icon \{\
width: 24px;\
margin-right: 12px;\
font-size: 1.2em;\
display: flex;\
align-items: center;\
justify-content: center;\
flex-shrink: 0;\
\}\
\
.nav-text \{\
transition: opacity 0.3s ease, width 0.3s ease;\
white-space: nowrap;\
overflow: hidden;\
\}\
\
.sidebar.collapsed .nav-text \{\
opacity: 0;\
width: 0;\
\}\
\
.nav-badge \{\
margin-left: auto;\
background: var(--danger);\
color: white;\
font-size: 10px;\
padding: 2px 6px;\
border-radius: 10px;\
font-weight: 600;\
transition: opacity 0.3s ease;\
\}\
\
.sidebar.collapsed .nav-badge \{\
opacity: 0;\
\}\
\
/* Main Content */\
.main-content \{\
flex: 1;\
margin-left: 280px;\
background: transparent;\
min-height: 100vh;\
transition: margin-left 0.3s ease;\
\}\
\
.sidebar.collapsed + .main-content \{\
margin-left: 80px;\
\}\
\
/* Top Header */\
.top-header \{\
background: rgba(255, 255, 255, 0.95);\
backdrop-filter: blur(10px);\
padding: 20px 30px;\
border-bottom: 1px solid rgba(189, 211, 206, 0.3);\
display: flex;\
justify-content: space-between;\
align-items: center;\
flex-wrap: wrap;\
gap: 20px;\
box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\
position: sticky;\
top: 0;\
z-index: 100;\
\}\
\
.header-left \{\
display: flex;\
align-items: center;\
gap: 20px;\
\}\
\
.page-title \{\
font-size: 1.8em;\
font-weight: 700;\
color: var(--midnight);\
margin: 0;\
\}\
\
.breadcrumb \{\
font-size: 0.9em;\
color: var(--herb);\
display: flex;\
align-items: center;\
gap: 8px;\
\}\
\
.header-right \{\
display: flex;\
align-items: center;\
gap: 20px;\
flex-wrap: wrap;\
\}\
\
/* Search Box */\
.search-box \{\
position: relative;\
\}\
\
.search-input \{\
padding: 12px 20px 12px 40px;\
border: 1px solid var(--celeste);\
border-radius: 25px;\
background: white;\
font-size: 14px;\
width: 250px;\
transition: all 0.3s ease;\
\}\
\
.search-input:focus \{\
outline: none;\
border-color: var(--marigold);\
width: 300px;\
box-shadow: 0 0 0 3px rgba(244, 162, 80, 0.1);\
\}\
\
.search-icon \{\
position: absolute;\
left: 15px;\
top: 50%;\
transform: translateY(-50%);\
color: var(--herb);\
pointer-events: none;\
\}\
\
/* Action Buttons */\
.header-actions \{\
display: flex;\
align-items: center;\
gap: 10px;\
\}\
\
.action-btn \{\
width: 40px;\
height: 40px;\
border: none;\
border-radius: 50%;\
background: white;\
color: var(--midnight);\
display: flex;\
align-items: center;\
justify-content: center;\
cursor: pointer;\
transition: all 0.3s ease;\
position: relative;\
box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\
font-size: 1.2em;\
\}\
\
.action-btn:hover \{\
background: var(--marigold);\
color: white;\
transform: translateY(-2px);\
box-shadow: 0 4px 15px rgba(244, 162, 80, 0.3);\
\}\
\
.action-btn .badge \{\
position: absolute;\
top: -5px;\
right: -5px;\
background: var(--danger);\
color: white;\
font-size: 10px;\
padding: 2px 5px;\
border-radius: 10px;\
font-weight: 600;\
min-width: 18px;\
text-align: center;\
\}\
\
/* User Menu */\
.user-menu \{\
display: flex;\
align-items: center;\
gap: 10px;\
padding: 10px 20px;\
background: var(--herb);\
color: white;\
border-radius: 25px;\
cursor: pointer;\
transition: all 0.3s ease;\
\}\
\
.user-menu:hover \{\
background: var(--midnight);\
transform: translateY(-2px);\
\}\
\
.user-avatar \{\
width: 30px;\
height: 30px;\
background: var(--marigold);\
border-radius: 50%;\
display: flex;\
align-items: center;\
justify-content: center;\
font-weight: 600;\
color: var(--midnight);\
font-size: 0.9em;\
\}\
\
/* Content Container */\
.content-container \{\
padding: 30px;\
max-width: 1400px;\
margin: 0 auto;\
\}\
\
/* Dashboard Cards */\
.dashboard-grid \{\
display: grid;\
grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\
gap: 25px;\
margin-bottom: 40px;\
\}\
\
.dashboard-card \{\
background: white;\
border-radius: 15px;\
padding: 25px;\
box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\
transition: all 0.3s ease;\
position: relative;\
overflow: hidden;\
\}\
\
.dashboard-card::before \{\
content: '';\
position: absolute;\
top: 0;\
left: 0;\
right: 0;\
height: 4px;\
background: linear-gradient(90deg, var(--marigold), var(--herb));\
\}\
\
.dashboard-card:hover \{\
transform: translateY(-5px);\
box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\
\}\
\
.card-header \{\
display: flex;\
justify-content: space-between;\
align-items: flex-start;\
margin-bottom: 20px;\
\}\
\
.card-title \{\
font-size: 0.85em;\
color: var(--herb);\
text-transform: uppercase;\
letter-spacing: 1px;\
font-weight: 600;\
opacity: 0.8;\
\}\
\
.card-icon \{\
width: 50px;\
height: 50px;\
background: var(--lionsmane);\
border-radius: 12px;\
display: flex;\
align-items: center;\
justify-content: center;\
font-size: 1.5em;\
\}\
\
.card-value \{\
font-size: 2.2em;\
font-weight: 700;\
color: var(--midnight);\
margin-bottom: 5px;\
line-height: 1;\
\}\
\
.card-subtitle \{\
font-size: 0.9em;\
color: var(--dark-gray);\
margin-bottom: 15px;\
\}\
\
.card-trend \{\
display: flex;\
align-items: center;\
gap: 5px;\
font-size: 0.85em;\
font-weight: 600;\
\}\
\
.trend-up \{\
color: var(--success);\
\}\
\
.trend-down \{\
color: var(--danger);\
\}\
\
/* Content Sections */\
.content-section \{\
background: white;\
border-radius: 20px;\
margin-bottom: 30px;\
overflow: hidden;\
box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\
\}\
\
.section-header \{\
padding: 25px 30px;\
background: linear-gradient(135deg, var(--midnight) 0%, var(--herb) 100%);\
color: white;\
display: flex;\
justify-content: space-between;\
align-items: center;\
flex-wrap: wrap;\
gap: 15px;\
\}\
\
.section-title \{\
font-size: 1.2em;\
font-weight: 600;\
display: flex;\
align-items: center;\
gap: 10px;\
\}\
\
.section-actions \{\
display: flex;\
gap: 10px;\
flex-wrap: wrap;\
\}\
\
.section-content \{\
padding: 30px;\
\}\
\
/* Forms */\
.form-grid \{\
display: grid;\
grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\
gap: 20px;\
margin-bottom: 20px;\
\}\
\
.form-group \{\
display: flex;\
flex-direction: column;\
\}\
\
.form-label \{\
margin-bottom: 8px;\
font-weight: 600;\
color: var(--midnight);\
font-size: 0.9em;\
text-transform: uppercase;\
letter-spacing: 0.5px;\
\}\
\
.form-control \{\
padding: 12px 15px;\
border: 1px solid #ddd;\
border-radius: 8px;\
font-size: 15px;\
transition: all 0.3s ease;\
background: white;\
font-family: inherit;\
\}\
\
.form-control:focus \{\
outline: none;\
border-color: var(--marigold);\
box-shadow: 0 0 0 3px rgba(244, 162, 80, 0.1);\
\}\
\
select.form-control \{\
cursor: pointer;\
\}\
\
textarea.form-control \{\
resize: vertical;\
min-height: 100px;\
\}\
\
/* Buttons */\
.btn \{\
padding: 12px 24px;\
border: none;\
border-radius: 8px;\
font-size: 14px;\
font-weight: 600;\
cursor: pointer;\
transition: all 0.3s ease;\
display: inline-flex;\
align-items: center;\
gap: 8px;\
text-decoration: none;\
font-family: inherit;\
white-space: nowrap;\
\}\
\
.btn:hover \{\
transform: translateY(-2px);\
box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\
\}\
\
.btn:active \{\
transform: translateY(0);\
\}\
\
.btn-primary \{\
background: var(--midnight);\
color: white;\
\}\
\
.btn-primary:hover \{\
background: var(--herb);\
\}\
\
.btn-secondary \{\
background: #e0e0e0;\
color: var(--midnight);\
\}\
\
.btn-secondary:hover \{\
background: var(--celeste);\
\}\
\
.btn-success \{\
background: var(--success);\
color: white;\
\}\
\
.btn-warning \{\
background: var(--warning);\
color: var(--midnight);\
\}\
\
.btn-danger \{\
background: var(--danger);\
color: white;\
\}\
\
.btn-sm \{\
padding: 8px 16px;\
font-size: 12px;\
\}\
\
.btn-lg \{\
padding: 16px 32px;\
font-size: 16px;\
\}\
\
/* Tables */\
.table-container \{\
overflow-x: auto;\
border-radius: 10px;\
border: 1px solid #e0e0e0;\
\}\
\
.table \{\
width: 100%;\
border-collapse: collapse;\
background: white;\
\}\
\
.table th \{\
background: var(--midnight);\
color: white;\
padding: 15px;\
text-align: left;\
font-weight: 600;\
font-size: 0.85em;\
text-transform: uppercase;\
letter-spacing: 0.5px;\
white-space: nowrap;\
\}\
\
.table td \{\
padding: 15px;\
border-bottom: 1px solid #e0e0e0;\
color: #333;\
\}\
\
.table tbody tr \{\
transition: background 0.2s ease;\
\}\
\
.table tbody tr:hover \{\
background: #f8f9fa;\
\}\
\
.table tbody tr:last-child td \{\
border-bottom: none;\
\}\
\
/* Modals */\
.modal-overlay \{\
position: fixed;\
top: 0;\
left: 0;\
right: 0;\
bottom: 0;\
background: rgba(0, 0, 0, 0.6);\
z-index: 2000;\
display: flex;\
align-items: center;\
justify-content: center;\
padding: 20px;\
opacity: 0;\
visibility: hidden;\
transition: all 0.3s ease;\
\}\
\
.modal-overlay.active \{\
opacity: 1;\
visibility: visible;\
\}\
\
.modal \{\
background: white;\
border-radius: 15px;\
width: 100%;\
max-width: 600px;\
max-height: 90vh;\
overflow-y: auto;\
transform: scale(0.9) translateY(20px);\
transition: all 0.3s ease;\
\}\
\
.modal-overlay.active .modal \{\
transform: scale(1) translateY(0);\
\}\
\
.modal-header \{\
padding: 25px 30px;\
background: linear-gradient(135deg, var(--midnight) 0%, var(--herb) 100%);\
color: white;\
display: flex;\
justify-content: space-between;\
align-items: center;\
\}\
\
.modal-title \{\
font-size: 1.3em;\
font-weight: 600;\
\}\
\
.modal-close \{\
background: none;\
border: none;\
color: white;\
font-size: 1.5em;\
cursor: pointer;\
padding: 0;\
width: 30px;\
height: 30px;\
display: flex;\
align-items: center;\
justify-content: center;\
transition: transform 0.3s ease;\
\}\
\
.modal-close:hover \{\
transform: rotate(90deg);\
\}\
\
.modal-body \{\
padding: 30px;\
\}\
\
.modal-footer \{\
padding: 20px 30px;\
background: #f8f9fa;\
display: flex;\
justify-content: flex-end;\
gap: 10px;\
\}\
\
/* Notifications */\
#notification-container \{\
position: fixed;\
top: 20px;\
right: 20px;\
z-index: 3000;\
display: flex;\
flex-direction: column;\
gap: 10px;\
pointer-events: none;\
\}\
\
.notification \{\
background: white;\
color: var(--midnight);\
padding: 16px 20px;\
border-radius: 10px;\
box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\
transform: translateX(400px);\
transition: all 0.3s ease;\
border-left: 4px solid var(--success);\
display: flex;\
align-items: center;\
gap: 15px;\
min-width: 300px;\
max-width: 400px;\
pointer-events: auto;\
\}\
\
.notification.show \{\
transform: translateX(0);\
\}\
\
.notification.error \{\
border-left-color: var(--danger);\
\}\
\
.notification.warning \{\
border-left-color: var(--warning);\
\}\
\
.notification.info \{\
border-left-color: var(--info);\
\}\
\
.notification-icon \{\
font-size: 1.5em;\
flex-shrink: 0;\
\}\
\
.notification-content \{\
flex: 1;\
\}\
\
.notification-title \{\
font-weight: 600;\
margin-bottom: 5px;\
\}\
\
.notification-message \{\
font-size: 0.9em;\
\}\
\
.notification-close \{\
background: none;\
border: none;\
font-size: 1.2em;\
cursor: pointer;\
color: var(--dark-gray);\
padding: 5px;\
opacity: 0.7;\
transition: opacity 0.3s ease;\
\}\
\
.notification-close:hover \{\
opacity: 1;\
\}\
\
/* Page States */\
.page \{\
display: none;\
animation: fadeIn 0.3s ease;\
\}\
\
.page.active \{\
display: block;\
\}\
\
@keyframes fadeIn \{\
from \{\
opacity: 0;\
transform: translateY(10px);\
\}\
to \{\
opacity: 1;\
transform: translateY(0);\
\}\
\}\
\
/* Badges */\
.badge \{\
display: inline-block;\
padding: 4px 8px;\
border-radius: 15px;\
font-size: 11px;\
font-weight: 600;\
text-transform: uppercase;\
letter-spacing: 0.5px;\
\}\
\
.badge-success \{\
background: rgba(40, 167, 69, 0.2);\
color: var(--success);\
\}\
.badge-warning \{\
background: rgba(255, 193, 7, 0.2);\
color: var(--warning);\
\}\
.badge-danger \{\
background: rgba(220, 53, 69, 0.2);\
color: var(--danger);\
\}\
.badge-info \{\
background: rgba(23, 162, 184, 0.2);\
color: var(--info);\
\}\
.badge-secondary \{\
background: #e0e0e0;\
color: var(--dark-gray);\
\}\
\
/* Progress Bars */\
.progress-bar \{\
width: 100%;\
height: 8px;\
background: #e0e0e0;\
border-radius: 4px;\
overflow: hidden;\
margin: 10px 0;\
\}\
\
.progress-fill \{\
height: 100%;\
background: var(--warning);\
transition: width 0.3s ease;\
\}\
\
/* Google Docs Integration Status */\
.google-integration \{\
display: inline-flex;\
align-items: center;\
gap: 8px;\
padding: 8px 16px;\
background: #4285f4;\
color: white;\
border-radius: 20px;\
font-size: 0.9em;\
margin-left: 20px;\
\}\
\
/* Job-Invoice Link Badge */\
.link-badge \{\
display: inline-flex;\
align-items: center;\
gap: 5px;\
padding: 4px 10px;\
background: rgba(23, 162, 184, 0.1);\
color: var(--info);\
border-radius: 15px;\
font-size: 0.85em;\
font-weight: 600;\
\}\
\
/* PDF Invoice Styles */\
.invoice-preview \{\
background: white;\
padding: 40px;\
max-width: 800px;\
margin: 0 auto;\
box-shadow: 0 0 20px rgba(0,0,0,0.1);\
position: relative;\
\}\
\
.invoice-header \{\
display: flex;\
justify-content: space-between;\
align-items: start;\
margin-bottom: 40px;\
padding-bottom: 20px;\
border-bottom: 2px solid #e0e0e0;\
\}\
\
.invoice-logo \{\
width: 80px;\
height: 80px;\
object-fit: contain;\
margin-bottom: 15px;\
\}\
\
.invoice-details \{\
display: grid;\
grid-template-columns: 1fr 1fr;\
gap: 30px;\
margin-bottom: 30px;\
\}\
\
.invoice-table \{\
width: 100%;\
margin: 30px 0;\
border-collapse: collapse;\
\}\
\
.invoice-table th \{\
background: var(--midnight);\
color: white;\
padding: 12px;\
text-align: left;\
\}\
\
.invoice-table td \{\
padding: 12px;\
border-bottom: 1px solid #e0e0e0;\
\}\
\
.invoice-total \{\
text-align: right;\
margin-top: 20px;\
font-size: 1.2em;\
font-weight: bold;\
\}\
\
/* Utility Classes */\
.d-flex \{ display: flex; \}\
.items-center \{ align-items: center; \}\
.justify-between \{ justify-content: space-between; \}\
.gap-2 \{ gap: 0.5rem; \}\
.gap-3 \{ gap: 1rem; \}\
.gap-4 \{ gap: 1.5rem; \}\
.flex-wrap \{ flex-wrap: wrap; \}\
.text-center \{ text-align: center; \}\
.text-muted \{ opacity: 0.7; color: var(--dark-gray); \}\
.mb-4 \{ margin-bottom: 1.5rem; \}\
.mt-2 \{ margin-top: 0.5rem; \}\
.mt-3 \{ margin-top: 1rem; \}\
.mt-4 \{ margin-top: 1.5rem; \}\
.p-3 \{ padding: 1rem; \}\
.p-4 \{ padding: 1.5rem; \}\
.w-100 \{ width: 100%; \}\
\
/* Responsive */\
@media (max-width: 768px) \{\
.sidebar \{\
transform: translateX(-100%);\
\}\
\
.sidebar.mobile-open \{\
transform: translateX(0);\
\}\
\
.main-content \{\
margin-left: 0;\
\}\
\
.sidebar.collapsed + .main-content \{\
margin-left: 0;\
\}\
\
.top-header \{\
padding: 15px 20px;\
\}\
\
.content-container \{\
padding: 20px;\
\}\
\
.dashboard-grid \{\
grid-template-columns: 1fr;\
\}\
\
.form-grid \{\
grid-template-columns: 1fr;\
\}\
\
.search-input \{\
width: 200px;\
\}\
\
.search-input:focus \{\
width: 220px;\
\}\
\
.header-right \{\
width: 100%;\
\}\
\}\
</style>\
</head>\
<body>\
<div class="app-container">\
<!-- Sidebar Navigation -->\
<nav class="sidebar" id="sidebar">\
<div class="sidebar-header">\
<div class="logo">CR</div>\
<div class="logo-text">Cleaning Rangers</div>\
<button class="sidebar-toggle" onclick="toggleSidebar()">\
<span id="toggle-icon">\'8b</span>\
</button>\
</div>\
\
<div class="nav-menu">\
<!-- Dashboard Section -->\
<div class="nav-section">\
<div class="nav-section-title">Overview</div>\
<button class="nav-item active" onclick="showPage('dashboard', this)">\
<div class="nav-icon">\uc0\u55357 \u56522 </div>\
<span class="nav-text">Dashboard</span>\
</button>\
<button class="nav-item" onclick="showPage('calendar', this)">\
<div class="nav-icon">\uc0\u55357 \u56517 </div>\
<span class="nav-text">Calendar</span>\
<span class="nav-badge">5</span>\
</button>\
</div>\
\
<!-- Customer Management -->\
<div class="nav-section">\
<div class="nav-section-title">Customers</div>\
<button class="nav-item" onclick="showPage('customers', this)">\
<div class="nav-icon">\uc0\u55357 \u56421 </div>\
<span class="nav-text">All Customers</span>\
</button>\
<button class="nav-item" onclick="showPage('leads', this)">\
<div class="nav-icon">\uc0\u55356 \u57263 </div>\
<span class="nav-text">Leads</span>\
</button>\
</div>\
\
<!-- Job Management -->\
<div class="nav-section">\
<div class="nav-section-title">Jobs & Scheduling</div>\
<button class="nav-item" onclick="showPage('jobs', this)">\
<div class="nav-icon">\uc0\u55358 \u56825 </div>\
<span class="nav-text">All Jobs</span>\
</button>\
<button class="nav-item" onclick="showPage('routes', this)">\
<div class="nav-icon">\uc0\u55357 \u56826 \u65039 </div>\
<span class="nav-text">Routes</span>\
</button>\
</div>\
\
<!-- Financial -->\
<div class="nav-section">\
<div class="nav-section-title">Financial</div>\
<button class="nav-item" onclick="showPage('invoices', this)">\
<div class="nav-icon">\uc0\u55357 \u56516 </div>\
<span class="nav-text">Invoices</span>\
</button>\
<button class="nav-item" onclick="showPage('payments', this)">\
<div class="nav-icon">\uc0\u55357 \u56499 </div>\
<span class="nav-text">Payments</span>\
</button>\
</div>\
\
<!-- Customer Experience -->\
<div class="nav-section">\
<div class="nav-section-title">Customer Experience</div>\
<button class="nav-item" onclick="showPage('customer-portal', this)">\
<div class="nav-icon">\uc0\u55356 \u57104 </div>\
<span class="nav-text">Customer Portal</span>\
</button>\
<button class="nav-item" onclick="showPage('communication', this)">\
<div class="nav-icon">\uc0\u55357 \u56492 </div>\
<span class="nav-text">Communication</span>\
</button>\
</div>\
\
<!-- Team Management -->\
<div class="nav-section">\
<div class="nav-section-title">Team</div>\
<button class="nav-item" onclick="showPage('contractors', this)">\
<div class="nav-icon">\uc0\u55357 \u56439 </div>\
<span class="nav-text">Contractors</span>\
</button>\
<button class="nav-item" onclick="showPage('mobile-interface', this)">\
<div class="nav-icon">\uc0\u55357 \u56561 </div>\
<span class="nav-text">Mobile App</span>\
</button>\
</div>\
\
<!-- Analytics -->\
<div class="nav-section">\
<div class="nav-section-title">Analytics</div>\
<button class="nav-item" onclick="showPage('reports', this)">\
<div class="nav-icon">\uc0\u55357 \u56520 </div>\
<span class="nav-text">Reports</span>\
</button>\
<button class="nav-item" onclick="showPage('analytics', this)">\
<div class="nav-icon">\uc0\u55357 \u56522 </div>\
<span class="nav-text">Analytics</span>\
</button>\
</div>\
\
<!-- System -->\
<div class="nav-section">\
<div class="nav-section-title">System</div>\
<button class="nav-item" onclick="showPage('settings', this)">\
<div class="nav-icon">\uc0\u9881 \u65039 </div>\
<span class="nav-text">Settings</span>\
</button>\
<button class="nav-item" onclick="showPage('integrations', this)">\
<div class="nav-icon">\uc0\u55357 \u56599 </div>\
<span class="nav-text">Integrations</span>\
</button>\
</div>\
</div>\
</nav>\
\
<!-- Main Content -->\
<main class="main-content">\
<!-- Top Header -->\
<header class="top-header">\
<div class="header-left">\
<div>\
<h1 class="page-title" id="page-title">Dashboard</h1>\
<div class="breadcrumb">\
<span>Home</span>\
<span>\'9b</span>\
<span id="breadcrumb-current">Dashboard</span>\
</div>\
</div>\
</div>\
\
<div class="header-right">\
<div class="search-box">\
<input type="text" class="search-input" placeholder="Search..." id="global-search">\
<div class="search-icon">\uc0\u55357 \u56589 </div>\
</div>\
\
<div class="google-integration" id="google-status" style="display: none;">\
\uc0\u55357 \u56516  Google Docs Connected\
</div>\
\
<div class="header-actions">\
<button class="action-btn" title="Notifications" onclick="showNotification('You have 5 new notifications', 'info')">\
\uc0\u55357 \u56596 \
<span class="badge">5</span>\
</button>\
<button class="action-btn" title="Messages" onclick="showNotification('You have 3 new messages', 'info')">\
\uc0\u55357 \u56492 \
<span class="badge">3</span>\
</button>\
<button class="action-btn" title="Quick Add" onclick="showQuickAdd()">\
\uc0\u10133 \
</button>\
</div>\
\
<div class="user-menu" onclick="showNotification('User menu coming soon!', 'info')">\
<div class="user-avatar">PC</div>\
<span>Pablo Chang</span>\
<span>\uc0\u9660 </span>\
</div>\
</div>\
</header>\
\
<!-- Content Container -->\
<div class="content-container">\
<!-- Dashboard Page -->\
<div id="dashboard" class="page active">\
<!-- Dashboard Stats -->\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Total Customers</div>\
<div class="card-value" id="total-customers">247</div>\
<div class="card-subtitle">Active clients this month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56421 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  +12% from last month\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Monthly Revenue</div>\
<div class="card-value" id="monthly-revenue">$24,580</div>\
<div class="card-subtitle">Total earnings this month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56496 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  +18% from last month\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Jobs Completed</div>\
<div class="card-value" id="jobs-completed">89</div>\
<div class="card-subtitle">This month</div>\
</div>\
<div class="card-icon">\uc0\u9989 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  +8% from last month\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Team Performance</div>\
<div class="card-value">94%</div>\
<div class="card-subtitle">Average rating</div>\
</div>\
<div class="card-icon">\uc0\u11088 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  +2% from last month\
</div>\
</div>\
</div>\
\
<!-- Quick Actions -->\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u9889  Quick Actions\
</div>\
</div>\
<div class="section-content">\
<div class="dashboard-grid">\
<button class="btn btn-primary btn-lg" onclick="showModal('add-customer-modal')">\
\uc0\u55357 \u56421  Add New Customer\
</button>\
<button class="btn btn-primary btn-lg" onclick="showModal('schedule-job-modal')">\
\uc0\u55358 \u56825  Create Job\
</button>\
<button class="btn btn-primary btn-lg" onclick="showModal('create-invoice-modal')">\
\uc0\u55357 \u56516  Create Invoice\
</button>\
<button class="btn btn-primary btn-lg" onclick="showPage('calendar', document.querySelector('[onclick*=\\"calendar\\"]'))">\
\uc0\u55357 \u56517  View Schedule\
</button>\
</div>\
</div>\
</div>\
\
<!-- Recent Activity -->\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56523  Recent Activity\
</div>\
<div class="section-actions">\
<button class="btn btn-secondary btn-sm">View All</button>\
</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Time</th>\
<th>Activity</th>\
<th>Customer</th>\
<th>Status</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="recent-activity">\
<tr>\
<td>2:30 PM</td>\
<td>Deep cleaning completed</td>\
<td>Sarah Johnson</td>\
<td><span class="badge badge-success">Completed</span></td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewActivity(1)">View</button>\
</td>\
</tr>\
<tr>\
<td>1:45 PM</td>\
<td>Invoice sent</td>\
<td>Ocean View Rentals</td>\
<td><span class="badge badge-info">Sent</span></td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewActivity(2)">View</button>\
</td>\
</tr>\
<tr>\
<td>11:20 AM</td>\
<td>New customer added</td>\
<td>Mike Anderson</td>\
<td><span class="badge badge-success">Active</span></td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewActivity(3)">View</button>\
</td>\
</tr>\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Customers Page -->\
<div id="customers" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56421  Customer Management\
</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('add-customer-modal')">\
\uc0\u10133  Add Customer\
</button>\
<button class="btn btn-secondary" onclick="exportCustomers()">\
\uc0\u55357 \u56522  Export\
</button>\
</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Customer</th>\
<th>Contact Info</th>\
<th>Type</th>\
<th>Last Job</th>\
<th>Total Value</th>\
<th>Status</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="customers-table">\
<!-- Customer data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Jobs Page -->\
<div id="jobs" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55358 \u56825  Job Management\
</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('schedule-job-modal')">\
\uc0\u10133  Create Job\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Job Stats -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Scheduled Today</div>\
<div class="card-value" id="jobs-today">8</div>\
<div class="card-subtitle">Jobs remaining</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56523 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">In Progress</div>\
<div class="card-value" id="jobs-in-progress">3</div>\
<div class="card-subtitle">Teams working</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56580 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Completed Today</div>\
<div class="card-value" id="jobs-completed-today">12</div>\
<div class="card-subtitle">Successfully finished</div>\
</div>\
<div class="card-icon">\uc0\u9989 </div>\
</div>\
</div>\
</div>\
\
<!-- Jobs Table -->\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Job ID</th>\
<th>Customer</th>\
<th>Service</th>\
<th>Date & Time</th>\
<th>Team</th>\
<th>Status</th>\
<th>Amount</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="jobs-table">\
<!-- Job data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Calendar Page -->\
<div id="calendar" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56517  Calendar & Scheduling\
</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('schedule-job-modal')">\
\uc0\u10133  Schedule Job\
</button>\
<button class="btn btn-secondary" onclick="optimizeRoutes()">\
\uc0\u55357 \u56826 \u65039  Optimize Routes\
</button>\
</div>\
</div>\
<div class="section-content">\
<div class="dashboard-card">\
<div class="d-flex items-center justify-between mb-4">\
<div class="d-flex items-center gap-4">\
<button class="btn btn-secondary btn-sm" onclick="previousMonth()">\'8b</button>\
<h3 id="calendar-month-year" style="margin: 0;">January 2025</h3>\
<button class="btn btn-secondary btn-sm" onclick="nextMonth()">\'9b</button>\
</div>\
<div class="d-flex items-center gap-3">\
<button class="btn btn-primary btn-sm" onclick="goToToday()">Today</button>\
</div>\
</div>\
\
<div id="calendar-grid" style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px;">\
<!-- Calendar days will be populated here -->\
</div>\
</div>\
\
<!-- Today's Schedule -->\
<div class="content-section mt-4">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56523  Today's Schedule\
</div>\
</div>\
<div class="section-content">\
<div class="dashboard-grid" id="today-schedule">\
<!-- Today's jobs will be populated here -->\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Invoices Page -->\
<div id="invoices" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56516  Invoice Management\
</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('create-invoice-modal')">\
\uc0\u10133  Create Invoice\
</button>\
<button class="btn btn-secondary" onclick="syncGoogleDocs()">\
\uc0\u55357 \u56516  Sync Google Docs\
</button>\
</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Invoice #</th>\
<th>Customer</th>\
<th>Job #</th>\
<th>Date</th>\
<th>Amount</th>\
<th>Status</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="invoices-table">\
<!-- Invoice data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Contractors Page -->\
<div id="contractors" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\
\uc0\u55357 \u56439  Contractor Management\
</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('add-contractor-modal')">\
\uc0\u10133  Add Contractor\
</button>\
</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Name</th>\
<th>Contact</th>\
<th>Rate</th>\
<th>Status</th>\
<th>Total Hours</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="contractors-table">\
<!-- Contractor data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Leads Page -->\
<div id="leads" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55356 \u57263  Lead Management</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('add-lead-modal')">\
\uc0\u10133  Add Lead\
</button>\
<button class="btn btn-secondary" onclick="importLeads()">\
\uc0\u55357 \u56549  Import Leads\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Lead Pipeline -->\
<div class="mb-4">\
<h4>Lead Pipeline</h4>\
<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">\
<div class="dashboard-card p-3 text-center">\
<h5>\uc0\u55356 \u56725  New</h5>\
<div class="card-value" id="leads-new">8</div>\
</div>\
<div class="dashboard-card p-3 text-center">\
<h5>\uc0\u55357 \u56542  Contacted</h5>\
<div class="card-value" id="leads-contacted">12</div>\
</div>\
<div class="dashboard-card p-3 text-center">\
<h5>\uc0\u55357 \u56496  Quoted</h5>\
<div class="card-value" id="leads-quoted">5</div>\
</div>\
<div class="dashboard-card p-3 text-center">\
<h5>\uc0\u9989  Won</h5>\
<div class="card-value" id="leads-won">3</div>\
</div>\
<div class="dashboard-card p-3 text-center">\
<h5>\uc0\u10060  Lost</h5>\
<div class="card-value" id="leads-lost">2</div>\
</div>\
</div>\
</div>\
\
<!-- Leads Table -->\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Lead Name</th>\
<th>Contact</th>\
<th>Source</th>\
<th>Status</th>\
<th>Value</th>\
<th>Last Contact</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="leads-table">\
<!-- Lead data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Routes Page -->\
<div id="routes" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56826 \u65039  Advanced Route Planning</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="optimizeAllRoutes()">\
\uc0\u55357 \u56960  Auto-Optimize All Routes\
</button>\
<button class="btn btn-secondary" onclick="exportRoutes()">\
\uc0\u55357 \u56522  Export Routes\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Route Controls -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56787 \u65039  Route Date</h5>\
<input type="date" class="form-control" id="route-date" onchange="loadRoutesForDate()">\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56421  Team Selection</h5>\
<select class="form-control" id="route-team" onchange="loadRoutesForDate()">\
<option value="all">All Teams</option>\
<option value="team1">Team 1 - Victor & Peralda</option>\
<option value="team2">Team 2 - Zula & Jessica</option>\
</select>\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u9881 \u65039  Optimization Settings</h5>\
<select class="form-control" id="route-optimization">\
<option value="time">Minimize Travel Time</option>\
<option value="distance">Minimize Distance</option>\
<option value="fuel">Minimize Fuel Cost</option>\
</select>\
</div>\
</div>\
\
<!-- Route Visualization -->\
<div class="dashboard-card mb-4">\
<div class="d-flex items-center justify-between mb-3">\
<h4>\uc0\u55357 \u56826 \u65039  Route Map</h4>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-primary" onclick="toggleTrafficView()">\uc0\u55357 \u56998  Traffic View</button>\
<button class="btn btn-sm btn-secondary" onclick="exportGoogleMaps()">\uc0\u55357 \u56525  Export to Google Maps</button>\
</div>\
</div>\
<div id="route-map" style="height: 400px; background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%); border-radius: 10px; position: relative; overflow: hidden;">\
<!-- Interactive route map will be displayed here -->\
<div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center;">\
<div style="font-size: 3em; margin-bottom: 10px;">\uc0\u55357 \u56826 \u65039 </div>\
<h4>Interactive Route Map</h4>\
<p>Select a date and team to view optimized routes</p>\
</div>\
</div>\
</div>\
\
<!-- Route Statistics -->\
<div class="dashboard-grid mb-4" id="route-stats" style="display: none;">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Total Distance</div>\
<div class="card-value" id="total-distance">0</div>\
<div class="card-subtitle">miles</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56527 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Travel Time</div>\
<div class="card-value" id="total-time">0</div>\
<div class="card-subtitle">minutes</div>\
</div>\
<div class="card-icon">\uc0\u9201 \u65039 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Fuel Cost</div>\
<div class="card-value">$<span id="fuel-cost">0</span></div>\
<div class="card-subtitle">estimated</div>\
</div>\
<div class="card-icon">\uc0\u9981 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Total Jobs</div>\
<div class="card-value" id="route-jobs">0</div>\
<div class="card-subtitle">scheduled</div>\
</div>\
<div class="card-icon">\uc0\u55358 \u56825 </div>\
</div>\
</div>\
</div>\
\
<!-- Route Details -->\
<div class="content-section" id="route-details" style="display: none;">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56523  Route Details</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="sendRouteToTeam()">\uc0\u55357 \u56561  Send to Team</button>\
<button class="btn btn-secondary" onclick="printRoute()">\uc0\u55357 \u56744 \u65039  Print Route</button>\
</div>\
</div>\
<div class="section-content" id="route-list">\
<!-- Route stops will be populated here -->\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Mobile Field Worker Interface -->\
<div id="mobile-interface" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56561  Mobile Field Interface</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="generateMobileApp()">\
\uc0\u55357 \u56561  Generate Mobile App\
</button>\
<button class="btn btn-secondary" onclick="qrCodeAccess()">\
\uc0\u55357 \u56567  QR Code Access\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Mobile Preview -->\
<div class="dashboard-grid">\
<div class="dashboard-card" style="max-width: 350px; margin: 0 auto;">\
<h4>\uc0\u55357 \u56561  Mobile Interface Preview</h4>\
<div style="border: 2px solid #333; border-radius: 25px; padding: 20px; background: #000; color: white; margin-top: 20px;">\
<div style="text-align: center; margin-bottom: 20px;">\
<div style="background: #F4A250; color: #013D5A; padding: 10px; border-radius: 10px; font-weight: bold;">\
Cleaning Rangers\
</div>\
</div>\
<div style="background: #333; padding: 15px; border-radius: 10px; margin-bottom: 15px;">\
<h5 style="color: #F4A250; margin: 0;">\uc0\u55357 \u56523  Today's Jobs</h5>\
<p style="margin: 5px 0; font-size: 0.9em;">3 jobs scheduled</p>\
</div>\
<div style="background: #333; padding: 15px; border-radius: 10px; margin-bottom: 15px;">\
<h5 style="color: #F4A250; margin: 0;">\uc0\u55357 \u56826 \u65039  Current Route</h5>\
<p style="margin: 5px 0; font-size: 0.9em;">Next: Sarah Johnson - 9:00 AM</p>\
</div>\
<div style="background: #333; padding: 15px; border-radius: 10px; margin-bottom: 15px;">\
<h5 style="color: #F4A250; margin: 0;">\uc0\u9200  Time Tracking</h5>\
<p style="margin: 5px 0; font-size: 0.9em;">On job: 2h 30m</p>\
</div>\
<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px;">\
<button style="background: #28a745; color: white; border: none; padding: 10px; border-radius: 8px; font-size: 0.8em;">\uc0\u9989  Check In</button>\
<button style="background: #dc3545; color: white; border: none; padding: 10px; border-radius: 8px; font-size: 0.8em;">\uc0\u55357 \u56568  Photos</button>\
</div>\
</div>\
</div>\
\
<!-- Field Worker Features -->\
<div class="dashboard-card">\
<h4>\uc0\u55357 \u57056 \u65039  Field Worker Features</h4>\
<div class="dashboard-grid mt-3">\
<div class="dashboard-card p-3">\
<h6>\uc0\u55357 \u56525  GPS Check-in/Check-out</h6>\
<p class="text-muted">Automatic location tracking</p>\
</div>\
<div class="dashboard-card p-3">\
<h6>\uc0\u55357 \u56568  Before/After Photos</h6>\
<p class="text-muted">Document work quality</p>\
</div>\
<div class="dashboard-card p-3">\
<h6>\uc0\u9201 \u65039  Time Tracking</h6>\
<p class="text-muted">Accurate payroll data</p>\
</div>\
<div class="dashboard-card p-3">\
<h6>\uc0\u55357 \u56523  Digital Checklists</h6>\
<p class="text-muted">Ensure consistency</p>\
</div>\
<div class="dashboard-card p-3">\
<h6>\uc0\u55357 \u56492  Team Communication</h6>\
<p class="text-muted">Instant messaging</p>\
</div>\
<div class="dashboard-card p-3">\
<h6>\uc0\u55357 \u56615  Issue Reporting</h6>\
<p class="text-muted">Report problems quickly</p>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Analytics Dashboard -->\
<div id="analytics" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56522  Advanced Analytics</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="refreshAnalytics()">\
\uc0\u55357 \u56580  Refresh Data\
</button>\
<button class="btn btn-secondary" onclick="exportAnalytics()">\
\uc0\u55357 \u56522  Export Analytics\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- KPI Dashboard -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Monthly Revenue</div>\
<div class="card-value" id="analytics-revenue">$24,580</div>\
<div class="card-subtitle">+18% vs last month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56496 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  Growing steadily\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Customer Retention</div>\
<div class="card-value">94.2%</div>\
<div class="card-subtitle">Excellent retention rate</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56580 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  Above industry average\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Avg Job Value</div>\
<div class="card-value">$185</div>\
<div class="card-subtitle">Per cleaning service</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56501 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  +12% increase\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Team Efficiency</div>\
<div class="card-value">87%</div>\
<div class="card-subtitle">On-time completion</div>\
</div>\
<div class="card-icon">\uc0\u9889 </div>\
</div>\
<div class="card-trend trend-up">\
\uc0\u8599 \u65039  Improving\
</div>\
</div>\
</div>\
\
<!-- Charts and Graphs -->\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h4>\uc0\u55357 \u56520  Revenue Trend</h4>\
<div style="height: 200px; background: linear-gradient(45deg, #e3f2fd, #f3e5f5); border-radius: 10px; display: flex; align-items: center; justify-content: center; margin-top: 15px;">\
<div style="text-align: center;">\
<div style="font-size: 2em;">\uc0\u55357 \u56520 </div>\
<p>Revenue chart visualization</p>\
<small class="text-muted">Interactive charts coming soon</small>\
</div>\
</div>\
</div>\
<div class="dashboard-card">\
<h4>\uc0\u55356 \u57263  Customer Acquisition</h4>\
<div style="height: 200px; background: linear-gradient(45deg, #e8f5e8, #fff3e0); border-radius: 10px; display: flex; align-items: center; justify-content: center; margin-top: 15px;">\
<div style="text-align: center;">\
<div style="font-size: 2em;">\uc0\u55356 \u57263 </div>\
<p>Lead conversion funnel</p>\
<small class="text-muted">Analytics dashboard coming soon</small>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Performance Metrics -->\
<div class="content-section mt-4">\
<div class="section-header">\
<div class="section-title">\uc0\u9889  Performance Metrics</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Metric</th>\
<th>Current Month</th>\
<th>Last Month</th>\
<th>Change</th>\
<th>Target</th>\
<th>Status</th>\
</tr>\
</thead>\
<tbody>\
<tr>\
<td><strong>Jobs Completed</strong></td>\
<td>89</td>\
<td>82</td>\
<td><span class="badge badge-success">+8.5%</span></td>\
<td>95</td>\
<td><span class="badge badge-warning">94%</span></td>\
</tr>\
<tr>\
<td><strong>Customer Satisfaction</strong></td>\
<td>4.8/5</td>\
<td>4.7/5</td>\
<td><span class="badge badge-success">+0.1</span></td>\
<td>4.8/5</td>\
<td><span class="badge badge-success">100%</span></td>\
</tr>\
<tr>\
<td><strong>On-Time Rate</strong></td>\
<td>87%</td>\
<td>84%</td>\
<td><span class="badge badge-success">+3%</span></td>\
<td>90%</td>\
<td><span class="badge badge-warning">97%</span></td>\
</tr>\
<tr>\
<td><strong>Route Efficiency</strong></td>\
<td>92%</td>\
<td>88%</td>\
<td><span class="badge badge-success">+4%</span></td>\
<td>95%</td>\
<td><span class="badge badge-warning">97%</span></td>\
</tr>\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Settings Page -->\
<div id="settings" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u9881 \u65039  System Settings</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="saveAllSettings()">\
\uc0\u55357 \u56510  Save All Settings\
</button>\
<button class="btn btn-secondary" onclick="resetToDefaults()">\
\uc0\u55357 \u56580  Reset to Defaults\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Business Settings -->\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h4>\uc0\u55356 \u57314  Business Information</h4>\
<div class="form-group mt-3">\
<label class="form-label">Business Name</label>\
<input type="text" class="form-control" id="business-name" value="Cleaning Rangers">\
</div>\
<div class="form-group">\
<label class="form-label">Owner Name</label>\
<input type="text" class="form-control" id="owner-name" value="Pablo Chang">\
</div>\
<div class="form-group">\
<label class="form-label">Phone Number</label>\
<input type="tel" class="form-control" id="business-phone" value="(904) 555-CLEAN">\
</div>\
<div class="form-group">\
<label class="form-label">Email Address</label>\
<input type="email" class="form-control" id="business-email" value="gonchangsolutionsllc@gmail.com">\
</div>\
<div class="form-group">\
<label class="form-label">Business Address</label>\
<textarea class="form-control" id="business-address" rows="3">GonChang Solutions LLC\
St. Augustine, FL 32080</textarea>\
</div>\
</div>\
\
<div class="dashboard-card">\
<h4>\uc0\u55357 \u56496  Pricing Settings</h4>\
<div class="form-group mt-3">\
<label class="form-label">Regular Cleaning Rate (per sqft)</label>\
<input type="number" class="form-control" id="regular-rate" value="0.08" step="0.01">\
</div>\
<div class="form-group">\
<label class="form-label">Deep Cleaning Rate (per sqft)</label>\
<input type="number" class="form-control" id="deep-rate" value="0.15" step="0.01">\
</div>\
<div class="form-group">\
<label class="form-label">Airbnb Turnover Rate (per sqft)</label>\
<input type="number" class="form-control" id="airbnb-rate" value="0.10" step="0.01">\
</div>\
<div class="form-group">\
<label class="form-label">Minimum Job Amount</label>\
<input type="number" class="form-control" id="minimum-job" value="80.00" step="0.01">\
</div>\
<div class="form-group">\
<label class="form-label">Tax Rate (%)</label>\
<input type="number" class="form-control" id="tax-rate" value="7.5" step="0.1">\
</div>\
</div>\
\
<div class="dashboard-card">\
<h4>\uc0\u55357 \u56517  Scheduling Settings</h4>\
<div class="form-group mt-3">\
<label class="form-label">Default Job Duration (hours)</label>\
<input type="number" class="form-control" id="default-duration" value="2.5" step="0.5">\
</div>\
<div class="form-group">\
<label class="form-label">Travel Time Between Jobs (minutes)</label>\
<input type="number" class="form-control" id="travel-time" value="20" step="5">\
</div>\
<div class="form-group">\
<label class="form-label">Working Hours Start</label>\
<input type="time" class="form-control" id="work-start" value="08:00">\
</div>\
<div class="form-group">\
<label class="form-label">Working Hours End</label>\
<input type="time" class="form-control" id="work-end" value="18:00">\
</div>\
<div class="form-group">\
<label class="form-label">Booking Lead Time (days)</label>\
<input type="number" class="form-control" id="lead-time" value="1">\
</div>\
</div>\
\
<div class="dashboard-card">\
<h4>\uc0\u55357 \u56551  Notification Settings</h4>\
<div class="form-group mt-3">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="email-notifications" checked>\
<label for="email-notifications">Email Notifications</label>\
</div>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="sms-notifications" checked>\
<label for="sms-notifications">SMS Notifications</label>\
</div>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="whatsapp-notifications" checked>\
<label for="whatsapp-notifications">WhatsApp Notifications</label>\
</div>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="auto-reminders" checked>\
<label for="auto-reminders">Automatic Appointment Reminders</label>\
</div>\
</div>\
<div class="form-group">\
<label class="form-label">Reminder Time (hours before)</label>\
<input type="number" class="form-control" id="reminder-hours" value="24">\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Integrations Page -->\
<div id="integrations" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56599  System Integrations</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="testAllConnections()">\
\uc0\u55357 \u56615  Test All Connections\
</button>\
<button class="btn btn-secondary" onclick="syncAllData()">\
\uc0\u55357 \u56580  Sync All Data\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Integration Status Dashboard -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Google Workspace</div>\
<div class="card-subtitle" id="google-workspace-status">Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56516 </div>\
</div>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-success" onclick="configureGoogle()">Configure</button>\
<button class="btn btn-sm btn-secondary" onclick="testGoogleConnection()">Test</button>\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">QuickBooks Online</div>\
<div class="card-subtitle" id="quickbooks-status">Not Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56522 </div>\
</div>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-primary" onclick="connectQuickBooks()">Connect</button>\
<button class="btn btn-sm btn-secondary" onclick="testQuickBooksConnection()">Test</button>\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">WhatsApp Business</div>\
<div class="card-subtitle" id="whatsapp-business-status">Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56561 </div>\
</div>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-success" onclick="configureWhatsApp()">Configure</button>\
<button class="btn btn-sm btn-secondary" onclick="testWhatsAppConnection()">Test</button>\
</div>\
</div>\
\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Stripe Payments</div>\
<div class="card-subtitle" id="stripe-integration-status">Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56499 </div>\
</div>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-success" onclick="configureStripeIntegration()">Configure</button>\
<button class="btn btn-sm btn-secondary" onclick="testStripeConnection()">Test</button>\
</div>\
</div>\
</div>\
\
<!-- Detailed Integration Settings -->\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56516  Google Workspace Integration</div>\
</div>\
<div class="section-content">\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56551  Gmail Integration</h5>\
<p class="text-muted">Send invoices and communicate with customers</p>\
<div class="form-group">\
<label class="form-label">Business Email</label>\
<input type="email" class="form-control" value="gonchangsolutionsllc@gmail.com" readonly>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="auto-email-invoices" checked>\
<label for="auto-email-invoices">Auto-send invoices via Gmail</label>\
</div>\
</div>\
</div>\
\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56516  Google Docs Integration</h5>\
<p class="text-muted">Automatically create reports and documents</p>\
<div class="form-group">\
<label class="form-label">Report Template Folder</label>\
<input type="text" class="form-control" placeholder="Select Google Drive folder">\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="auto-create-reports" checked>\
<label for="auto-create-reports">Auto-create monthly reports</label>\
</div>\
</div>\
</div>\
\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56517  Google Calendar Integration</h5>\
<p class="text-muted">Sync jobs with your Google Calendar</p>\
<div class="form-group">\
<label class="form-label">Calendar Name</label>\
<input type="text" class="form-control" value="Cleaning Rangers Schedule" readonly>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="sync-jobs-calendar" checked>\
<label for="sync-jobs-calendar">Sync all jobs to calendar</label>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- QuickBooks Integration -->\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56522  QuickBooks Integration</div>\
</div>\
<div class="section-content">\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56496  Accounting Sync</h5>\
<p class="text-muted">Automatically sync customers, invoices, and payments with QuickBooks</p>\
<div class="dashboard-grid mt-3">\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="sync-customers-qb">\
<label for="sync-customers-qb">Sync customers to QuickBooks</label>\
</div>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="sync-invoices-qb">\
<label for="sync-invoices-qb">Sync invoices to QuickBooks</label>\
</div>\
</div>\
<div class="form-group">\
<div style="display: flex; align-items: center; gap: 10px;">\
<input type="checkbox" id="sync-payments-qb">\
<label for="sync-payments-qb">Sync payments to QuickBooks</label>\
</div>\
</div>\
<div class="form-group">\
<label class="form-label">Income Account</label>\
<select class="form-control">\
<option>Select QuickBooks account</option>\
<option>Service Revenue</option>\
<option>Cleaning Income</option>\
</select>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Payments Page -->\
<div id="payments" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56499  Payment Processing</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('setup-payment-modal')">\
\uc0\u9881 \u65039  Setup Payment Methods\
</button>\
<button class="btn btn-secondary" onclick="showModal('process-payment-modal')">\
\uc0\u55357 \u56496  Process Payment\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Payment Methods Status -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Stripe Integration</div>\
<div class="card-subtitle" id="stripe-status">Not Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56499 </div>\
</div>\
<button class="btn btn-sm btn-primary" onclick="connectStripe()">Connect Stripe</button>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Bank of America</div>\
<div class="card-subtitle" id="boa-status">Not Connected</div>\
</div>\
<div class="card-icon">\uc0\u55356 \u57318 </div>\
</div>\
<button class="btn btn-sm btn-primary" onclick="connectBankOfAmerica()">Connect BOA</button>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Zelle Payments</div>\
<div class="card-subtitle">Manual Processing</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56561 </div>\
</div>\
<button class="btn btn-sm btn-success" onclick="showZelleInfo()">View Info</button>\
</div>\
</div>\
\
<!-- Payment History -->\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56496  Payment History</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Date</th>\
<th>Customer</th>\
<th>Invoice #</th>\
<th>Amount</th>\
<th>Method</th>\
<th>Status</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="payments-table">\
<!-- Payment data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Customer Portal Page -->\
<div id="customer-portal" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55356 \u57104  Customer Portal</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="generatePortalLink()">\
\uc0\u55357 \u56599  Generate Portal Links\
</button>\
<button class="btn btn-secondary" onclick="customizePortal()">\
\uc0\u55356 \u57256  Customize Portal\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Portal Stats -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Active Customers</div>\
<div class="card-value" id="portal-customers">247</div>\
<div class="card-subtitle">With portal access</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56421 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Online Bookings</div>\
<div class="card-value" id="online-bookings">23</div>\
<div class="card-subtitle">This month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56517 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Portal Revenue</div>\
<div class="card-value" id="portal-revenue">$8,420</div>\
<div class="card-subtitle">Online payments</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56496 </div>\
</div>\
</div>\
</div>\
\
<!-- Portal Preview -->\
<div class="dashboard-card">\
<h4>Customer Portal Preview</h4>\
<div style="border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; margin-top: 20px;">\
<iframe id="portal-preview" style="width: 100%; height: 400px; border: none;" src="about:blank"></iframe>\
</div>\
<div class="mt-3">\
<button class="btn btn-primary" onclick="previewPortal()">\uc0\u55357 \u56589  Preview Portal</button>\
<button class="btn btn-secondary" onclick="editPortal()">\uc0\u9999 \u65039  Edit Portal</button>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Communication Center Page -->\
<div id="communication" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56492  Communication Center</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="showModal('send-message-modal')">\
\uc0\u55357 \u56561  Send Message\
</button>\
<button class="btn btn-secondary" onclick="showModal('message-templates-modal')">\
\uc0\u55357 \u56541  Templates\
</button>\
</div>\
</div>\
<div class="section-content">\
<!-- Communication Stats -->\
<div class="dashboard-grid mb-4">\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">WhatsApp</div>\
<div class="card-subtitle" id="whatsapp-status">Connected</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56561 </div>\
</div>\
<button class="btn btn-sm btn-success" onclick="openWhatsApp()">Open WhatsApp</button>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">SMS Messages</div>\
<div class="card-value" id="sms-sent">156</div>\
<div class="card-subtitle">Sent this month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56492 </div>\
</div>\
</div>\
<div class="dashboard-card">\
<div class="card-header">\
<div>\
<div class="card-title">Email Campaigns</div>\
<div class="card-value" id="emails-sent">89</div>\
<div class="card-subtitle">Sent this month</div>\
</div>\
<div class="card-icon">\uc0\u55357 \u56551 </div>\
</div>\
</div>\
</div>\
\
<!-- Recent Messages -->\
<div class="content-section mt-4">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56556  Recent Messages</div>\
</div>\
<div class="section-content">\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Time</th>\
<th>Customer</th>\
<th>Type</th>\
<th>Message</th>\
<th>Status</th>\
<th>Actions</th>\
</tr>\
</thead>\
<tbody id="messages-table">\
<!-- Message data will be populated here -->\
</tbody>\
</table>\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
\
<!-- Reports Page -->\
<div id="reports" class="page">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56520  Reports & Analytics</div>\
<div class="section-actions">\
<button class="btn btn-primary" onclick="generateGoogleDocsReport()">\
\uc0\u55357 \u56516  Generate Google Docs Report\
</button>\
<button class="btn btn-secondary" onclick="exportAllData()">\
\uc0\u55357 \u56522  Export All Data\
</button>\
</div>\
</div>\
<div class="section-content">\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h4>Quick Reports</h4>\
<div class="d-flex flex-wrap gap-2 mt-3">\
<button class="btn btn-sm btn-primary" onclick="generateReport('revenue')">Revenue Report</button>\
<button class="btn btn-sm btn-primary" onclick="generateReport('customers')">Customer Report</button>\
<button class="btn btn-sm btn-primary" onclick="generateReport('jobs')">Job Report</button>\
<button class="btn btn-sm btn-primary" onclick="generateReport('team')">Team Report</button>\
</div>\
</div>\
</div>\
\
<div id="report-preview" style="display: none; margin-top: 30px;">\
<div class="content-section">\
<div class="section-header">\
<div class="section-title">\uc0\u55357 \u56522  Report Preview</div>\
</div>\
<div class="section-content" id="report-content">\
<!-- Report content will be populated here -->\
</div>\
</div>\
</div>\
</div>\
</div>\
</div>\
</main>\
</div>\
\
<!-- Modals -->\
<!-- Add Customer Modal -->\
<div class="modal-overlay" id="add-customer-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u10024  Add New Customer</h3>\
<button class="modal-close" onclick="hideModal('add-customer-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="add-customer-form" onsubmit="saveCustomer(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Full Name *</label>\
<input type="text" class="form-control" name="fullName" required>\
</div>\
<div class="form-group">\
<label class="form-label">Company Name</label>\
<input type="text" class="form-control" name="companyName">\
</div>\
<div class="form-group">\
<label class="form-label">Email Address *</label>\
<input type="email" class="form-control" name="email" required>\
</div>\
<div class="form-group">\
<label class="form-label">Phone Number *</label>\
<input type="tel" class="form-control" name="phone" required>\
</div>\
<div class="form-group">\
<label class="form-label">Property Address *</label>\
<input type="text" class="form-control" name="address" required>\
</div>\
<div class="form-group">\
<label class="form-label">Property SQFT</label>\
<input type="number" class="form-control" name="sqft">\
</div>\
<div class="form-group">\
<label class="form-label">Customer Type</label>\
<select class="form-control" name="customerType">\
<option value="residential">\uc0\u55356 \u57312  Residential</option>\
<option value="commercial">\uc0\u55356 \u57314  Commercial</option>\
<option value="airbnb">\uc0\u55356 \u57302 \u65039  Airbnb/Vacation Rental</option>\
</select>\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Notes</label>\
<textarea class="form-control" name="notes" rows="3"></textarea>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('add-customer-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="saveCustomer()">\uc0\u55357 \u56421  Save Customer</button>\
</div>\
</div>\
</div>\
\
<!-- Schedule Job Modal -->\
<div class="modal-overlay" id="schedule-job-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55358 \u56825  Schedule New Job</h3>\
<button class="modal-close" onclick="hideModal('schedule-job-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="schedule-job-form" onsubmit="scheduleJob(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Customer *</label>\
<select class="form-control" name="customerId" required onchange="loadCustomerDetails(this.value)">\
<option value="">Select Customer</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Service Type *</label>\
<select class="form-control" name="serviceType" required onchange="calculateEstimate()">\
<option value="">Select Service</option>\
<option value="regular-cleaning">\uc0\u55358 \u56825  Regular Cleaning</option>\
<option value="deep-cleaning">\uc0\u10024  Deep Cleaning</option>\
<option value="move-in-out">\uc0\u55357 \u56550  Move In/Out</option>\
<option value="airbnb-turnover">\uc0\u55356 \u57302 \u65039  Airbnb Turnover</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Date *</label>\
<input type="date" class="form-control" name="serviceDate" required>\
</div>\
<div class="form-group">\
<label class="form-label">Time *</label>\
<input type="time" class="form-control" name="serviceTime" required>\
</div>\
<div class="form-group">\
<label class="form-label">Duration (hours)</label>\
<input type="number" class="form-control" name="duration" step="0.5" placeholder="2.5">\
</div>\
<div class="form-group">\
<label class="form-label">Team Assignment</label>\
<select class="form-control" name="teamAssignment">\
<option value="">Auto-assign</option>\
<option value="team1">Team 1 - Victor & Peralda</option>\
<option value="team2">Team 2 - Zula & Jessica</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Estimated Cost</label>\
<input type="number" class="form-control" name="estimatedCost" step="0.01" placeholder="150.00" id="estimated-cost">\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Special Instructions</label>\
<textarea class="form-control" name="instructions" rows="3"></textarea>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('schedule-job-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="scheduleJob()">\uc0\u55358 \u56825  Schedule Job</button>\
</div>\
</div>\
</div>\
\
<!-- Create Invoice Modal -->\
<div class="modal-overlay" id="create-invoice-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56516  Create Invoice</h3>\
<button class="modal-close" onclick="hideModal('create-invoice-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="create-invoice-form" onsubmit="createInvoice(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Customer *</label>\
<select class="form-control" name="customerId" required onchange="loadCustomerJobs(this.value)">\
<option value="">Select Customer</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Link to Job (Optional)</label>\
<select class="form-control" name="jobId" id="job-select">\
<option value="">No Job Selected</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Invoice Date *</label>\
<input type="date" class="form-control" name="invoiceDate" required>\
</div>\
<div class="form-group">\
<label class="form-label">Due Date *</label>\
<input type="date" class="form-control" name="dueDate" required>\
</div>\
<div class="form-group">\
<label class="form-label">Amount *</label>\
<input type="number" class="form-control" name="amount" step="0.01" required>\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Description</label>\
<textarea class="form-control" name="description" rows="3"></textarea>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('create-invoice-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="createInvoice()">\uc0\u55357 \u56516  Create Invoice</button>\
</div>\
</div>\
</div>\
\
<!-- Add Contractor Modal -->\
<div class="modal-overlay" id="add-contractor-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56439  Add New Contractor</h3>\
<button class="modal-close" onclick="hideModal('add-contractor-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="add-contractor-form" onsubmit="saveContractor(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Full Name *</label>\
<input type="text" class="form-control" name="fullName" required>\
</div>\
<div class="form-group">\
<label class="form-label">Email *</label>\
<input type="email" class="form-control" name="email" required>\
</div>\
<div class="form-group">\
<label class="form-label">Phone *</label>\
<input type="tel" class="form-control" name="phone" required>\
</div>\
<div class="form-group">\
<label class="form-label">Hourly Rate *</label>\
<input type="number" class="form-control" name="rate" step="0.01" required>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('add-contractor-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="saveContractor()">\uc0\u55357 \u56439  Save Contractor</button>\
</div>\
</div>\
</div>\
\
<!-- Add Lead Modal -->\
<div class="modal-overlay" id="add-lead-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55356 \u57263  Add New Lead</h3>\
<button class="modal-close" onclick="hideModal('add-lead-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="add-lead-form" onsubmit="saveLead(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Full Name *</label>\
<input type="text" class="form-control" name="fullName" required>\
</div>\
<div class="form-group">\
<label class="form-label">Email *</label>\
<input type="email" class="form-control" name="email" required>\
</div>\
<div class="form-group">\
<label class="form-label">Phone *</label>\
<input type="tel" class="form-control" name="phone" required>\
</div>\
<div class="form-group">\
<label class="form-label">Lead Source</label>\
<select class="form-control" name="source">\
<option value="Website">Website</option>\
<option value="Referral">Referral</option>\
<option value="Google Ads">Google Ads</option>\
<option value="Social Media">Social Media</option>\
<option value="Other">Other</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Estimated Value</label>\
<input type="number" class="form-control" name="value" step="0.01">\
</div>\
<div class="form-group">\
<label class="form-label">Service Interest</label>\
<select class="form-control" name="serviceInterest">\
<option value="">Select Service</option>\
<option value="regular-cleaning">Regular Cleaning</option>\
<option value="deep-cleaning">Deep Cleaning</option>\
<option value="commercial">Commercial</option>\
<option value="airbnb">Airbnb/Vacation Rental</option>\
</select>\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Notes</label>\
<textarea class="form-control" name="notes" rows="3"></textarea>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('add-lead-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="saveLead()">\uc0\u55356 \u57263  Save Lead</button>\
</div>\
</div>\
</div>\
\
<!-- Setup Payment Modal -->\
<div class="modal-overlay" id="setup-payment-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u9881 \u65039  Setup Payment Methods</h3>\
<button class="modal-close" onclick="hideModal('setup-payment-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56594  Stripe Configuration</h5>\
<div class="form-group mt-3">\
<label class="form-label">Publishable Key</label>\
<input type="text" class="form-control" id="stripe-publishable-key" placeholder="pk_live_...">\
</div>\
<div class="form-group">\
<label class="form-label">Secret Key</label>\
<input type="password" class="form-control" id="stripe-secret-key" placeholder="sk_live_...">\
</div>\
<button class="btn btn-primary w-100" onclick="saveStripeConfig()">\uc0\u55357 \u56499  Save Stripe Config</button>\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u55356 \u57318  Bank of America</h5>\
<div class="form-group mt-3">\
<label class="form-label">Merchant ID</label>\
<input type="text" class="form-control" id="boa-merchant-id">\
</div>\
<div class="form-group">\
<label class="form-label">API Key</label>\
<input type="password" class="form-control" id="boa-api-key">\
</div>\
<button class="btn btn-primary w-100" onclick="saveBOAConfig()">\uc0\u55356 \u57318  Save BOA Config</button>\
</div>\
</div>\
<div class="mt-4">\
<h5>\uc0\u55357 \u56561  Zelle Information</h5>\
<div class="dashboard-card">\
<p><strong>Business Email:</strong> gonchangsolutionsllc@gmail.com</p>\
<p><strong>Business Phone:</strong> (904) 555-CLEAN</p>\
<p><strong>Business Name:</strong> GonChang Solutions LLC</p>\
<button class="btn btn-secondary" onclick="copyZelleInfo()">\uc0\u55357 \u56523  Copy Zelle Info</button>\
</div>\
</div>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('setup-payment-modal')">Close</button>\
</div>\
</div>\
</div>\
\
<!-- Process Payment Modal -->\
<div class="modal-overlay" id="process-payment-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56496  Process Payment</h3>\
<button class="modal-close" onclick="hideModal('process-payment-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="process-payment-form" onsubmit="processPayment(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Customer *</label>\
<select class="form-control" name="customerId" required onchange="loadCustomerInvoices(this.value)">\
<option value="">Select Customer</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Invoice</label>\
<select class="form-control" name="invoiceId" id="invoice-select">\
<option value="">Select Invoice</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Payment Method *</label>\
<select class="form-control" name="paymentMethod" required onchange="showPaymentFields(this.value)">\
<option value="">Select Method</option>\
<option value="stripe">\uc0\u55357 \u56499  Credit Card (Stripe)</option>\
<option value="boa">\uc0\u55356 \u57318  Bank of America</option>\
<option value="zelle">\uc0\u55357 \u56561  Zelle</option>\
<option value="cash">\uc0\u55357 \u56501  Cash</option>\
<option value="check">\uc0\u55357 \u56516  Check</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Amount *</label>\
<input type="number" class="form-control" name="amount" step="0.01" required>\
</div>\
<div id="payment-specific-fields">\
<!-- Dynamic fields based on payment method -->\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Notes</label>\
<textarea class="form-control" name="notes" rows="2"></textarea>\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('process-payment-modal')">Cancel</button>\
<button class="btn btn-primary" onclick="processPayment()">\uc0\u55357 \u56496  Process Payment</button>\
</div>\
</div>\
</div>\
\
<!-- Send Message Modal -->\
<div class="modal-overlay" id="send-message-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56561  Send Message</h3>\
<button class="modal-close" onclick="hideModal('send-message-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<form id="send-message-form" onsubmit="sendMessage(event)">\
<div class="form-grid">\
<div class="form-group">\
<label class="form-label">Recipients *</label>\
<select class="form-control" name="recipients" multiple required>\
<option value="all-customers">All Customers</option>\
<option value="active-customers">Active Customers Only</option>\
<option value="custom">Select Individual Customers</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Message Type *</label>\
<select class="form-control" name="messageType" required onchange="loadMessageTemplate(this.value)">\
<option value="">Select Type</option>\
<option value="appointment-reminder">\uc0\u55357 \u56517  Appointment Reminder</option>\
<option value="service-confirmation">\uc0\u9989  Service Confirmation</option>\
<option value="invoice-notification">\uc0\u55357 \u56496  Invoice Notification</option>\
<option value="promotional">\uc0\u55356 \u57225  Promotional Message</option>\
<option value="custom">\uc0\u9999 \u65039  Custom Message</option>\
</select>\
</div>\
<div class="form-group">\
<label class="form-label">Send Via *</label>\
<select class="form-control" name="sendVia" required>\
<option value="whatsapp">\uc0\u55357 \u56561  WhatsApp</option>\
<option value="sms">\uc0\u55357 \u56492  SMS</option>\
<option value="email">\uc0\u55357 \u56551  Email</option>\
</select>\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Message *</label>\
<textarea class="form-control" name="message" rows="4" required placeholder="Your message will appear here..."></textarea>\
<small class="text-muted">Use \{customer_name\}, \{service_date\}, \{amount\} for personalization</small>\
</div>\
<div class="form-group" style="grid-column: 1 / -1;">\
<label class="form-label">Schedule Send (Optional)</label>\
<input type="datetime-local" class="form-control" name="scheduleTime">\
</div>\
</div>\
</form>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('send-message-modal')">Cancel</button>\
<button class="btn btn-warning" onclick="previewMessage()">\uc0\u55357 \u56385 \u65039  Preview</button>\
<button class="btn btn-primary" onclick="sendMessage()">\uc0\u55357 \u56561  Send Message</button>\
</div>\
</div>\
</div>\
\
<!-- Message Templates Modal -->\
<div class="modal-overlay" id="message-templates-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56541  Message Templates</h3>\
<button class="modal-close" onclick="hideModal('message-templates-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<div class="dashboard-grid">\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56517  Appointment Reminder</h5>\
<p class="text-muted">Hi \{customer_name\}, this is a friendly reminder that we have your cleaning service scheduled for \{service_date\} at \{service_time\}. Our team will arrive promptly. Thank you for choosing Cleaning Rangers!</p>\
<button class="btn btn-sm btn-primary" onclick="useTemplate('appointment-reminder')">Use Template</button>\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u9989  Service Confirmation</h5>\
<p class="text-muted">Hello \{customer_name\}, we've completed your cleaning service today. Thank you for trusting Cleaning Rangers with your home. We hope you love the results! - Pablo Chang</p>\
<button class="btn btn-sm btn-primary" onclick="useTemplate('service-confirmation')">Use Template</button>\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u55357 \u56496  Invoice Notification</h5>\
<p class="text-muted">Hi \{customer_name\}, your invoice for $\{amount\} is ready. You can pay securely through our customer portal or via Zelle to gonchangsolutionsllc@gmail.com. Thank you!</p>\
<button class="btn btn-sm btn-primary" onclick="useTemplate('invoice-notification')">Use Template</button>\
</div>\
<div class="dashboard-card">\
<h5>\uc0\u55356 \u57225  Promotional</h5>\
<p class="text-muted">Special offer for our valued customers! Book your next cleaning service this month and save 15%. Call us at (904) 555-CLEAN or book online. - Cleaning Rangers Team</p>\
<button class="btn btn-sm btn-primary" onclick="useTemplate('promotional')">Use Template</button>\
</div>\
</div>\
<div class="mt-4">\
<button class="btn btn-success" onclick="createNewTemplate()">\uc0\u10133  Create New Template</button>\
</div>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('message-templates-modal')">Close</button>\
</div>\
</div>\
</div>\
\
<!-- Notification Container -->\
<div id="notification-container"></div>\
\
<script>\
// Application State\
const AppState = \{\
currentPage: 'dashboard',\
customers: [],\
jobs: [],\
contractors: [],\
invoices: [],\
leads: [],\
routes: [],\
sidebarCollapsed: false,\
currentDate: new Date(),\
selectedRoute: null,\
nextJobNumber: 1,\
nextInvoiceNumber: 1\
\};\
\
// Initialize Application\
document.addEventListener('DOMContentLoaded', function() \{\
console.log('DOM loaded, initializing app...');\
initializeApp();\
\});\
\
function initializeApp() \{\
try \{\
loadSampleData();\
updateDashboard();\
setDateDefaults();\
updateDropdowns();\
generateCalendar();\
setupEventListeners();\
loadFromLocalStorage();\
console.log('\uc0\u9989  Cleaning Rangers CRM Initialized Successfully!');\
showNotification('Welcome to Cleaning Rangers CRM!', 'success');\
\} catch (error) \{\
console.error('Error initializing app:', error);\
showNotification('Error initializing app', 'error');\
\}\
\}\
\
// Enhanced Sample Data\
function loadSampleData() \{\
if (AppState.customers.length === 0) \{\
AppState.customers = [\
\{\
id: 1,\
fullName: 'Sarah Johnson',\
companyName: '',\
email: 'sarah.johnson@email.com',\
phone: '(904) 555-0123',\
address: '123 Ocean View Dr, St. Augustine, FL 32080',\
sqft: 2500,\
customerType: 'residential',\
status: 'active',\
totalValue: 4580,\
lastJob: '2025-01-15',\
lat: 29.8928,\
lng: -81.3124,\
portalAccess: true,\
portalLastLogin: '2025-01-25'\
\},\
\{\
id: 2,\
fullName: 'Mike Anderson',\
companyName: 'Ocean View Rentals',\
email: 'mike@oceanviewrentals.com',\
phone: '(904) 555-0124',\
address: '456 Historic St, St. Augustine, FL 32084',\
sqft: 1800,\
customerType: 'airbnb',\
status: 'active',\
totalValue: 8920,\
lastJob: '2025-01-20',\
lat: 29.8901,\
lng: -81.3120,\
portalAccess: true,\
portalLastLogin: '2025-01-26'\
\},\
\{\
id: 3,\
fullName: 'Emma Davis',\
companyName: 'Sunrise Properties',\
email: 'emma@sunriseproperties.com',\
phone: '(904) 555-0125',\
address: '789 Coastal Blvd, St. Augustine, FL 32095',\
sqft: 3200,\
customerType: 'commercial',\
status: 'active',\
totalValue: 12500,\
lastJob: '2025-01-18',\
lat: 29.8850,\
lng: -81.3150,\
portalAccess: false,\
portalLastLogin: null\
\}\
];\
\}\
\
if (AppState.contractors.length === 0) \{\
AppState.contractors = [\
\{ id: 1, name: 'Victor Martinez', email: 'victor@cleaningrangers.com', phone: '(904) 555-0201', rate: 17.00, status: 'working', totalHours: 156, currentLocation: 'Ocean View Dr' \},\
\{ id: 2, name: 'Zula Rodriguez', email: 'zula@cleaningrangers.com', phone: '(904) 555-0202', rate: 17.00, status: 'available', totalHours: 142, currentLocation: 'Base' \},\
\{ id: 3, name: 'Peralda Santos', email: 'peralda@cleaningrangers.com', phone: '(904) 555-0203', rate: 13.00, status: 'working', totalHours: 168, currentLocation: 'Historic District' \},\
\{ id: 4, name: 'Jessica Chen', email: 'jessica@cleaningrangers.com', phone: '(904) 555-0204', rate: 15.00, status: 'available', totalHours: 120, currentLocation: 'Base' \}\
];\
\}\
\
if (AppState.jobs.length === 0) \{\
AppState.jobs = [\
\{\
id: 1,\
jobNumber: 'CR-2025-001',\
customerId: 1,\
customerName: 'Sarah Johnson',\
serviceType: 'deep-cleaning',\
date: '2025-01-27',\
time: '09:00',\
duration: 3,\
teamAssignment: 'team1',\
status: 'scheduled',\
estimatedCost: 285.00,\
address: '123 Ocean View Dr, St. Augustine, FL 32080',\
lat: 29.8928,\
lng: -81.3124,\
progress: 0,\
invoiceId: null\
\},\
\{\
id: 2,\
jobNumber: 'CR-2025-002',\
customerId: 2,\
customerName: 'Mike Anderson',\
serviceType: 'airbnb-turnover',\
date: '2025-01-27',\
time: '14:00',\
duration: 2,\
teamAssignment: 'team2',\
status: 'in-progress',\
estimatedCost: 180.00,\
address: '456 Historic St, St. Augustine, FL 32084',\
lat: 29.8901,\
lng: -81.3120,\
progress: 45,\
invoiceId: null\
\},\
\{\
id: 3,\
jobNumber: 'CR-2025-003',\
customerId: 3,\
customerName: 'Emma Davis',\
serviceType: 'commercial',\
date: '2025-01-27',\
time: '18:00',\
duration: 4,\
teamAssignment: 'team2',\
status: 'scheduled',\
estimatedCost: 420.00,\
address: '789 Coastal Blvd, St. Augustine, FL 32095',\
lat: 29.8850,\
lng: -81.3150,\
progress: 0,\
invoiceId: null\
\}\
];\
AppState.nextJobNumber = 4;\
\}\
\
if (AppState.invoices.length === 0) \{\
AppState.invoices = [\
\{\
id: 1,\
invoiceNumber: 'INV-2025-001',\
customerId: 1,\
customerName: 'Sarah Johnson',\
customerEmail: 'sarah.johnson@email.com',\
customerPhone: '(904) 555-0123',\
customerAddress: '123 Ocean View Dr, St. Augustine, FL 32080',\
invoiceDate: '2025-01-20',\
dueDate: '2025-02-04',\
amount: 285.00,\
description: 'Deep cleaning service - 2025-01-15',\
status: 'sent',\
jobId: null,\
jobNumber: null\
\},\
\{\
id: 2,\
invoiceNumber: 'INV-2025-002',\
customerId: 2,\
customerName: 'Mike Anderson',\
customerEmail: 'mike@oceanviewrentals.com',\
customerPhone: '(904) 555-0124',\
customerAddress: '456 Historic St, St. Augustine, FL 32084',\
invoiceDate: '2025-01-21',\
dueDate: '2025-02-05',\
amount: 180.00,\
description: 'Airbnb turnover service - 2025-01-20',\
status: 'paid',\
jobId: null,\
jobNumber: null\
\}\
];\
AppState.nextInvoiceNumber = 3;\
\}\
\
if (AppState.leads.length === 0) \{\
AppState.leads = [\
\{\
id: 1,\
fullName: 'John Williams',\
email: 'john.williams@email.com',\
phone: '(904) 555-0301',\
source: 'Website',\
status: 'new',\
value: 250,\
lastContact: '2025-01-25',\
notes: 'Interested in weekly residential cleaning'\
\},\
\{\
id: 2,\
fullName: 'Beach Resort LLC',\
email: 'info@beachresort.com',\
phone: '(904) 555-0302',\
source: 'Referral',\
status: 'quoted',\
value: 1200,\
lastContact: '2025-01-24',\
notes: 'Large commercial property, 10 units'\
\},\
\{\
id: 3,\
fullName: 'Mary Thompson',\
email: 'mary.t@email.com',\
phone: '(904) 555-0303',\
source: 'Google Ads',\
status: 'contacted',\
value: 180,\
lastContact: '2025-01-23',\
notes: 'Bi-weekly cleaning request'\
\}\
];\
\}\
\
// Initialize payments if not exists\
if (!AppState.payments) \{\
AppState.payments = [\
\{\
id: 1,\
date: '2025-01-21',\
customerId: 2,\
customerName: 'Mike Anderson',\
invoiceId: 2,\
invoiceNumber: 'INV-2025-002',\
amount: 180.00,\
method: 'zelle',\
status: 'completed',\
transactionId: 'ZEL-20250121-001',\
notes: 'Zelle payment received'\
\}\
];\
\}\
\
// Initialize messages if not exists\
if (!AppState.messages) \{\
AppState.messages = [\
\{\
id: 1,\
timestamp: '2025-01-26 10:30',\
customerId: 1,\
customerName: 'Sarah Johnson',\
type: 'whatsapp',\
message: 'Hi Sarah, this is a reminder that we have your cleaning scheduled for tomorrow at 9:00 AM.',\
status: 'delivered',\
direction: 'outbound'\
\},\
\{\
id: 2,\
timestamp: '2025-01-26 14:15',\
customerId: 2,\
customerName: 'Mike Anderson',\
type: 'sms',\
message: 'Your cleaning service has been completed. Thank you for choosing Cleaning Rangers!',\
status: 'delivered',\
direction: 'outbound'\
\}\
];\
\}\
\}\
\
// Save to localStorage\
function saveToLocalStorage() \{\
localStorage.setItem('cleaningRangersCRM', JSON.stringify(AppState));\
\}\
\
// Load from localStorage\
function loadFromLocalStorage() \{\
const saved = localStorage.getItem('cleaningRangersCRM');\
if (saved) \{\
try \{\
const savedState = JSON.parse(saved);\
Object.assign(AppState, savedState);\
console.log('Data loaded from localStorage');\
\} catch (error) \{\
console.error('Error loading from localStorage:', error);\
\}\
\}\
\}\
\
// Auto-save every 30 seconds\
setInterval(() => \{\
saveToLocalStorage();\
\}, 30000);\
\
// Update Dashboard\
function updateDashboard() \{\
const totalCustomersEl = document.getElementById('total-customers');\
const monthlyRevenueEl = document.getElementById('monthly-revenue');\
const jobsCompletedEl = document.getElementById('jobs-completed');\
\
if (totalCustomersEl) totalCustomersEl.textContent = AppState.customers.length;\
if (monthlyRevenueEl) \{\
const revenue = AppState.invoices.reduce((sum, inv) => sum + inv.amount, 0);\
monthlyRevenueEl.textContent = `$$\{revenue.toLocaleString()\}`;\
\}\
if (jobsCompletedEl) \{\
const completed = AppState.jobs.filter(j => j.status === 'completed').length;\
jobsCompletedEl.textContent = completed;\
\}\
\}\
\
// Sidebar Toggle\
function toggleSidebar() \{\
const sidebar = document.getElementById('sidebar');\
const toggleIcon = document.getElementById('toggle-icon');\
\
AppState.sidebarCollapsed = !AppState.sidebarCollapsed;\
\
if (AppState.sidebarCollapsed) \{\
sidebar.classList.add('collapsed');\
toggleIcon.textContent = '\'9b';\
\} else \{\
sidebar.classList.remove('collapsed');\
toggleIcon.textContent = '\'8b';\
\}\
\}\
\
// Page Navigation - Fixed\
function showPage(pageId, navElement) \{\
console.log('Navigating to:', pageId);\
\
// Hide all pages\
document.querySelectorAll('.page').forEach(page => \{\
page.classList.remove('active');\
\});\
\
// Remove active state from nav items\
document.querySelectorAll('.nav-item').forEach(item => \{\
item.classList.remove('active');\
\});\
\
// Show selected page\
const selectedPage = document.getElementById(pageId);\
if (selectedPage) \{\
selectedPage.classList.add('active');\
\}\
\
// Update nav item active state\
if (navElement) \{\
navElement.classList.add('active');\
\}\
\
// Update page title\
const pageTitle = document.getElementById('page-title');\
const breadcrumbCurrent = document.getElementById('breadcrumb-current');\
\
const pageTitles = \{\
'dashboard': 'Dashboard',\
'customers': 'Customer Management',\
'jobs': 'Job Management',\
'calendar': 'Calendar & Scheduling',\
'invoices': 'Invoice Management',\
'contractors': 'Contractor Management',\
'leads': 'Leads Management',\
'routes': 'Advanced Route Planning',\
'payments': 'Payment Processing',\
'reports': 'Reports & Analytics',\
'customer-portal': 'Customer Portal',\
'communication': 'Communication Center',\
'mobile-interface': 'Mobile Field Interface',\
'analytics': 'Advanced Analytics',\
'settings': 'System Settings',\
'integrations': 'System Integrations'\
\};\
\
const title = pageTitles[pageId] || 'Dashboard';\
if (pageTitle) pageTitle.textContent = title;\
if (breadcrumbCurrent) breadcrumbCurrent.textContent = title;\
\
// Update state\
AppState.currentPage = pageId;\
\
// Load page data\
loadPageData(pageId);\
\}\
\
// Load Page Data\
function loadPageData(pageId) \{\
console.log('Loading data for:', pageId);\
\
switch(pageId) \{\
case 'customers':\
loadCustomersData();\
break;\
case 'jobs':\
loadJobsData();\
break;\
case 'calendar':\
generateCalendar();\
loadTodaySchedule();\
break;\
case 'contractors':\
loadContractorsData();\
break;\
case 'invoices':\
loadInvoicesData();\
break;\
case 'leads':\
loadLeadsData();\
break;\
case 'routes':\
initializeRoutes();\
break;\
case 'payments':\
loadPaymentsData();\
break;\
case 'customer-portal':\
loadCustomerPortalData();\
break;\
case 'communication':\
loadCommunicationData();\
break;\
case 'mobile-interface':\
loadMobileInterfaceData();\
break;\
case 'analytics':\
loadAnalyticsData();\
break;\
case 'settings':\
loadSettingsData();\
break;\
case 'integrations':\
loadIntegrationsData();\
break;\
\}\
\}\
\
// Customer Management Functions\
function loadCustomersData() \{\
const tableBody = document.getElementById('customers-table');\
if (!tableBody) return;\
\
tableBody.innerHTML = '';\
\
AppState.customers.forEach(customer => \{\
const row = document.createElement('tr');\
row.innerHTML = `\
<td><strong>$\{customer.fullName\}</strong><br><small>$\{customer.companyName || ''\}</small></td>\
<td>\
$\{customer.email\}<br>\
$\{customer.phone\}\
</td>\
<td><span class="badge badge-secondary">$\{customer.customerType\}</span></td>\
<td>$\{customer.lastJob || 'N/A'\}</td>\
<td>$$\{customer.totalValue.toLocaleString()\}</td>\
<td>\
<span class="badge badge-$\{customer.status === 'active' ? 'success' : 'secondary'\}">\
$\{customer.status\}\
</span>\
</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewCustomer($\{customer.id\})">View</button>\
<button class="btn btn-sm btn-primary" onclick="editCustomer($\{customer.id\})">Edit</button>\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function saveCustomer(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('add-customer-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
\
const customer = \{\
id: AppState.customers.length + 1,\
fullName: formData.get('fullName'),\
companyName: formData.get('companyName'),\
email: formData.get('email'),\
phone: formData.get('phone'),\
address: formData.get('address'),\
sqft: parseInt(formData.get('sqft')) || 0,\
customerType: formData.get('customerType'),\
status: 'active',\
totalValue: 0,\
lastJob: null,\
notes: formData.get('notes')\
\};\
\
AppState.customers.push(customer);\
hideModal('add-customer-modal');\
form.reset();\
\
if (AppState.currentPage === 'customers') \{\
loadCustomersData();\
\}\
\
updateDropdowns();\
updateDashboard();\
saveToLocalStorage();\
showNotification(`Customer $\{customer.fullName\} added successfully!`, 'success');\
\
\} catch (error) \{\
console.error('Error saving customer:', error);\
showNotification('Error saving customer. Please try again.', 'error');\
\}\
\}\
\
// Job Management Functions\
function loadJobsData() \{\
const tableBody = document.getElementById('jobs-table');\
if (!tableBody) return;\
\
// Update stats\
const today = new Date().toISOString().split('T')[0];\
const todayJobs = AppState.jobs.filter(j => j.date === today);\
const inProgressJobs = AppState.jobs.filter(j => j.status === 'in-progress');\
const completedJobs = AppState.jobs.filter(j => j.status === 'completed' && j.date === today);\
\
const jobsTodayEl = document.getElementById('jobs-today');\
const jobsInProgressEl = document.getElementById('jobs-in-progress');\
const jobsCompletedTodayEl = document.getElementById('jobs-completed-today');\
\
if (jobsTodayEl) jobsTodayEl.textContent = todayJobs.length;\
if (jobsInProgressEl) jobsInProgressEl.textContent = inProgressJobs.length;\
if (jobsCompletedTodayEl) jobsCompletedTodayEl.textContent = completedJobs.length;\
\
tableBody.innerHTML = '';\
\
AppState.jobs.forEach(job => \{\
const row = document.createElement('tr');\
const progressBar = job.status === 'in-progress' ?\
`<div class="progress-bar">\
<div class="progress-fill" style="width: $\{job.progress\}%;"></div>\
</div>` : '';\
\
const invoiceLink = job.invoiceId ? \
`<span class="link-badge">\uc0\u55357 \u56516  $\{AppState.invoices.find(i => i.id === job.invoiceId)?.invoiceNumber || 'INV'\}</span>` : '';\
\
row.innerHTML = `\
<td>\
<strong>$\{job.jobNumber\}</strong>\
$\{invoiceLink\}\
</td>\
<td>$\{job.customerName\}</td>\
<td>$\{job.serviceType.replace('-', ' ')\}</td>\
<td>$\{job.date\}<br><small>$\{job.time\}</small></td>\
<td>$\{job.teamAssignment || 'Unassigned'\}</td>\
<td>\
<span class="badge badge-$\{\
job.status === 'completed' ? 'success' :\
job.status === 'in-progress' ? 'warning' :\
'info'\
\}">\
$\{job.status\}\
</span>\
$\{progressBar\}\
</td>\
<td>$$\{job.estimatedCost.toFixed(2)\}</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewJob($\{job.id\})">View</button>\
$\{job.status === 'scheduled' ?\
`<button class="btn btn-sm btn-primary" onclick="startJob($\{job.id\})">Start</button>` :\
job.status === 'in-progress' ?\
`<button class="btn btn-sm btn-success" onclick="completeJob($\{job.id\})">Complete</button>` :\
''\
\}\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function scheduleJob(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('schedule-job-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
const customerId = parseInt(formData.get('customerId'));\
const customer = AppState.customers.find(c => c.id === customerId);\
\
if (!customer) \{\
showNotification('Please select a valid customer', 'error');\
return;\
\}\
\
const job = \{\
id: AppState.jobs.length + 1,\
jobNumber: `CR-2025-$\{String(AppState.nextJobNumber).padStart(3, '0')\}`,\
customerId: customerId,\
customerName: customer.fullName,\
serviceType: formData.get('serviceType'),\
date: formData.get('serviceDate'),\
time: formData.get('serviceTime'),\
duration: parseFloat(formData.get('duration')) || 2,\
teamAssignment: formData.get('teamAssignment'),\
status: 'scheduled',\
estimatedCost: parseFloat(formData.get('estimatedCost')) || 0,\
address: customer.address,\
instructions: formData.get('instructions'),\
progress: 0,\
invoiceId: null\
\};\
\
AppState.jobs.push(job);\
AppState.nextJobNumber++;\
hideModal('schedule-job-modal');\
form.reset();\
setDateDefaults();\
\
if (AppState.currentPage === 'jobs') \{\
loadJobsData();\
\}\
\
updateDashboard();\
saveToLocalStorage();\
showNotification(`Job $\{job.jobNumber\} scheduled successfully!`, 'success');\
\
\} catch (error) \{\
console.error('Error scheduling job:', error);\
showNotification('Error scheduling job. Please try again.', 'error');\
\}\
\}\
\
function startJob(jobId) \{\
const job = AppState.jobs.find(j => j.id === jobId);\
if (job) \{\
job.status = 'in-progress';\
job.progress = 0;\
job.startTime = new Date().toLocaleTimeString();\
\
// Update contractor status\
if (job.teamAssignment === 'team1') \{\
AppState.contractors[0].status = 'working';\
AppState.contractors[2].status = 'working';\
\} else if (job.teamAssignment === 'team2') \{\
AppState.contractors[1].status = 'working';\
AppState.contractors[3].status = 'working';\
\}\
\
loadJobsData();\
saveToLocalStorage();\
showNotification(`Job $\{job.jobNumber\} started!`, 'success');\
\
// Start progress simulation\
simulateJobProgress(jobId);\
\}\
\}\
\
function completeJob(jobId) \{\
const job = AppState.jobs.find(j => j.id === jobId);\
if (job) \{\
job.status = 'completed';\
job.progress = 100;\
job.completedTime = new Date().toLocaleTimeString();\
\
loadJobsData();\
saveToLocalStorage();\
showNotification(`Job $\{job.jobNumber\} completed!`, 'success');\
\
// Prompt to create invoice\
setTimeout(() => \{\
if (confirm('Would you like to create an invoice for this job?')) \{\
showModal('create-invoice-modal');\
// Pre-fill invoice form\
const form = document.getElementById('create-invoice-form');\
const customerSelect = form.querySelector('[name="customerId"]');\
const jobSelect = form.querySelector('[name="jobId"]');\
const amountInput = form.querySelector('[name="amount"]');\
const descriptionInput = form.querySelector('[name="description"]');\
\
if (customerSelect) customerSelect.value = job.customerId;\
if (jobSelect) \{\
loadCustomerJobs(job.customerId);\
setTimeout(() => \{\
jobSelect.value = job.id;\
\}, 100);\
\}\
if (amountInput) amountInput.value = job.estimatedCost;\
if (descriptionInput) descriptionInput.value = `$\{job.serviceType.replace('-', ' ')\} service completed on $\{job.date\}`;\
\}\
\}, 500);\
\}\
\}\
\
function simulateJobProgress(jobId) \{\
const interval = setInterval(() => \{\
const job = AppState.jobs.find(j => j.id === jobId);\
if (job && job.status === 'in-progress') \{\
job.progress = Math.min(job.progress + Math.random() * 10, 95);\
if (AppState.currentPage === 'jobs') \{\
loadJobsData();\
\}\
saveToLocalStorage();\
\} else \{\
clearInterval(interval);\
\}\
\}, 5000);\
\}\
\
function loadCustomerDetails(customerId) \{\
if (!customerId) return;\
const customer = AppState.customers.find(c => c.id == customerId);\
if (customer) \{\
// Auto-calculate estimates based on customer type and property size\
calculateEstimate();\
\}\
\}\
\
function calculateEstimate() \{\
const form = document.getElementById('schedule-job-form');\
const serviceType = form.querySelector('[name="serviceType"]').value;\
const customerId = form.querySelector('[name="customerId"]').value;\
const estimatedCostInput = form.querySelector('[name="estimatedCost"]');\
\
if (!serviceType || !customerId) return;\
\
const customer = AppState.customers.find(c => c.id == customerId);\
if (!customer) return;\
\
let baseRate = 0;\
switch (serviceType) \{\
case 'regular-cleaning':\
baseRate = 0.08; // $0.08 per sqft\
break;\
case 'deep-cleaning':\
baseRate = 0.15; // $0.15 per sqft\
break;\
case 'move-in-out':\
baseRate = 0.20; // $0.20 per sqft\
break;\
case 'airbnb-turnover':\
baseRate = 0.10; // $0.10 per sqft\
break;\
\}\
\
const estimate = Math.max((customer.sqft || 1500) * baseRate, 80); // Minimum $80\
estimatedCostInput.value = estimate.toFixed(2);\
\}\
\
// Invoice Management Functions\
function loadInvoicesData() \{\
const tableBody = document.getElementById('invoices-table');\
if (!tableBody) return;\
\
tableBody.innerHTML = '';\
\
AppState.invoices.forEach(invoice => \{\
const jobLink = invoice.jobId ? \
`<span class="link-badge">\uc0\u55358 \u56825  $\{AppState.jobs.find(j => j.id === invoice.jobId)?.jobNumber || 'JOB'\}</span>` : \
'<span class="text-muted">No job linked</span>';\
\
const row = document.createElement('tr');\
row.innerHTML = `\
<td><strong>$\{invoice.invoiceNumber\}</strong></td>\
<td>$\{invoice.customerName\}</td>\
<td>$\{jobLink\}</td>\
<td>$\{invoice.invoiceDate\}</td>\
<td>$$\{invoice.amount.toFixed(2)\}</td>\
<td>\
<span class="badge badge-$\{\
invoice.status === 'paid' ? 'success' :\
invoice.status === 'sent' ? 'warning' :\
'secondary'\
\}">\
$\{invoice.status\}\
</span>\
</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewInvoice($\{invoice.id\})">View</button>\
<button class="btn btn-sm btn-primary" onclick="sendInvoice($\{invoice.id\})">Send</button>\
<button class="btn btn-sm btn-danger" onclick="downloadInvoicePDF($\{invoice.id\})">PDF</button>\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function createInvoice(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('create-invoice-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
const customerId = parseInt(formData.get('customerId'));\
const customer = AppState.customers.find(c => c.id === customerId);\
const jobId = formData.get('jobId') ? parseInt(formData.get('jobId')) : null;\
\
if (!customer) \{\
showNotification('Please select a valid customer', 'error');\
return;\
\}\
\
const invoice = \{\
id: AppState.invoices.length + 1,\
invoiceNumber: `INV-$\{new Date().getFullYear()\}-$\{String(AppState.nextInvoiceNumber).padStart(3, '0')\}`,\
customerId: customerId,\
customerName: customer.fullName,\
customerEmail: customer.email,\
customerPhone: customer.phone,\
customerAddress: customer.address,\
invoiceDate: formData.get('invoiceDate'),\
dueDate: formData.get('dueDate'),\
amount: parseFloat(formData.get('amount')),\
description: formData.get('description'),\
status: 'draft',\
jobId: jobId,\
jobNumber: null,\
createdDate: new Date().toISOString()\
\};\
\
// Link job to invoice if job is selected\
if (jobId) \{\
const job = AppState.jobs.find(j => j.id === jobId);\
if (job) \{\
job.invoiceId = invoice.id;\
invoice.jobNumber = job.jobNumber;\
invoice.description = invoice.description || `$\{job.serviceType.replace('-', ' ')\} service - $\{job.date\}`;\
\}\
\}\
\
AppState.invoices.push(invoice);\
AppState.nextInvoiceNumber++;\
hideModal('create-invoice-modal');\
form.reset();\
setDateDefaults();\
\
if (AppState.currentPage === 'invoices') \{\
loadInvoicesData();\
\}\
\
updateDashboard();\
saveToLocalStorage();\
showNotification(`Invoice $\{invoice.invoiceNumber\} created successfully!`, 'success');\
\
// Show invoice preview\
setTimeout(() => \{\
showInvoicePreview(invoice.id);\
\}, 500);\
\
\} catch (error) \{\
console.error('Error creating invoice:', error);\
showNotification('Error creating invoice. Please try again.', 'error');\
\}\
\}\
\
function loadCustomerJobs(customerId) \{\
const jobSelect = document.getElementById('job-select');\
if (!jobSelect || !customerId) return;\
\
jobSelect.innerHTML = '<option value="">No Job Selected</option>';\
\
const customerJobs = AppState.jobs.filter(j => j.customerId == customerId && !j.invoiceId);\
customerJobs.forEach(job => \{\
jobSelect.innerHTML += `<option value="$\{job.id\}">$\{job.jobNumber\} - $\{job.serviceType.replace('-', ' ')\} ($\{job.date\})</option>`;\
\});\
\}\
\
function showInvoicePreview(invoiceId) \{\
const invoice = AppState.invoices.find(i => i.id === invoiceId);\
if (!invoice) return;\
\
// Create modal for invoice preview\
const previewHtml = `\
<div class="modal-overlay active" id="invoice-preview-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" style="max-width: 900px;" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56516  Invoice Preview</h3>\
<button class="modal-close" onclick="hideModal('invoice-preview-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<div class="invoice-preview" id="invoice-content">\
<div class="invoice-header">\
<div>\
<div class="logo" style="width: 80px; height: 80px; margin-bottom: 15px; font-size: 2em;">CR</div>\
<h2 style="color: var(--midnight); margin: 0;">Cleaning Rangers</h2>\
<p style="margin: 5px 0;">Professional Cleaning Services</p>\
<p style="margin: 5px 0;">(904) 555-CLEAN</p>\
<p style="margin: 5px 0;">info@cleaningrangers.com</p>\
<p style="margin: 5px 0;">Pablo Chang, Owner</p>\
</div>\
<div style="text-align: right;">\
<h1 style="color: var(--midnight); margin: 0;">INVOICE</h1>\
<p style="font-size: 1.2em; font-weight: bold; margin: 10px 0;">$\{invoice.invoiceNumber\}</p>\
$\{invoice.jobNumber ? `<p class="link-badge">\uc0\u55358 \u56825  $\{invoice.jobNumber\}</p>` : ''\}\
</div>\
</div>\
\
<div class="invoice-details">\
<div>\
<h4 style="color: var(--herb); margin-bottom: 10px;">Bill To:</h4>\
<p><strong>$\{invoice.customerName\}</strong></p>\
<p>$\{invoice.customerAddress\}</p>\
<p>$\{invoice.customerPhone\}</p>\
<p>$\{invoice.customerEmail\}</p>\
</div>\
<div style="text-align: right;">\
<p><strong>Invoice Date:</strong> $\{invoice.invoiceDate\}</p>\
<p><strong>Due Date:</strong> $\{invoice.dueDate\}</p>\
<p><strong>Status:</strong> <span class="badge badge-$\{invoice.status === 'paid' ? 'success' : 'warning'\}">$\{invoice.status\}</span></p>\
</div>\
</div>\
\
<table class="invoice-table">\
<thead>\
<tr>\
<th>Description</th>\
<th style="text-align: right;">Amount</th>\
</tr>\
</thead>\
<tbody>\
<tr>\
<td>$\{invoice.description || 'Cleaning Services'\}</td>\
<td style="text-align: right;">$$\{invoice.amount.toFixed(2)\}</td>\
</tr>\
</tbody>\
</table>\
\
<div class="invoice-total">\
<p>Subtotal: $$\{invoice.amount.toFixed(2)\}</p>\
<p>Tax (7.5%): $$\{(invoice.amount * 0.075).toFixed(2)\}</p>\
<h3>Total Due: $$\{(invoice.amount * 1.075).toFixed(2)\}</h3>\
</div>\
\
            <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e0e0e0;">\
                <p style="text-align: center; color: var(--dark-gray);">\
                    Thank you for choosing Cleaning Rangers!<br>\
                    Payment is due within 15 days of invoice date.<br>\
                    For questions, contact Pablo Chang at (904) 555-CLEAN\
                </p>\
            </div>\
        </div>\
    </div>\
    <div class="modal-footer">\
        <button class="btn btn-secondary" onclick="hideModal('invoice-preview-modal')">Close</button>\
        <button class="btn btn-primary" onclick="sendInvoiceEmail($\{invoice.id\})">\uc0\u55357 \u56551  Send Email</button>\
        <button class="btn btn-danger" onclick="downloadInvoicePDF($\{invoice.id\})">\uc0\u55357 \u56516  Download PDF</button>\
        <button class="btn btn-success" onclick="createGoogleDoc($\{invoice.id\})">\uc0\u55357 \u56516  Create Google Doc</button>\
    </div>\
</div>\
</div>\
`;\
\
// Add preview modal to body\
const tempDiv = document.createElement('div');\
tempDiv.innerHTML = previewHtml;\
document.body.appendChild(tempDiv.firstElementChild);\
\}\
\
function downloadInvoicePDF(invoiceId) \{\
const invoice = AppState.invoices.find(i => i.id === invoiceId);\
if (!invoice) return;\
\
showNotification('Generating PDF...', 'info');\
\
setTimeout(() => \{\
// Create a simple HTML version for printing\
const printWindow = window.open('', '_blank');\
const invoiceContent = document.getElementById('invoice-content');\
if (!invoiceContent) return;\
\
const invoiceHtml = invoiceContent.innerHTML;\
\
printWindow.document.write(`\
<!DOCTYPE html>\
<html>\
<head>\
<title>Invoice $\{invoice.invoiceNumber\}</title>\
<style>\
body \{ font-family: Arial, sans-serif; margin: 20px; \}\
.invoice-preview \{ max-width: 800px; margin: 0 auto; \}\
.invoice-header \{ display: flex; justify-content: space-between; margin-bottom: 40px; \}\
.invoice-details \{ display: grid; grid-template-columns: 1fr 1fr; gap: 30px; margin-bottom: 30px; \}\
.invoice-table \{ width: 100%; border-collapse: collapse; margin: 30px 0; \}\
.invoice-table th \{ background: #013D5A; color: white; padding: 12px; text-align: left; \}\
.invoice-table td \{ padding: 12px; border-bottom: 1px solid #e0e0e0; \}\
.invoice-total \{ text-align: right; margin-top: 20px; \}\
.logo \{ width: 80px; height: 80px; background: #F4A250; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: #013D5A; font-weight: bold; font-size: 2em; \}\
.badge \{ display: inline-block; padding: 4px 8px; border-radius: 15px; font-size: 11px; font-weight: 600; \}\
.badge-success \{ background: rgba(40, 167, 69, 0.2); color: #28a745; \}\
.badge-warning \{ background: rgba(255, 193, 7, 0.2); color: #ffc107; \}\
.link-badge \{ display: inline-flex; align-items: center; gap: 5px; padding: 4px 10px; background: rgba(23, 162, 184, 0.1); color: #17a2b8; border-radius: 15px; font-size: 0.85em; font-weight: 600; \}\
@media print \{ body \{ margin: 0; \} \}\
</style>\
</head>\
<body onload="window.print(); window.close();">\
<div class="invoice-preview">$\{invoiceHtml\}</div>\
</body>\
</html>\
`);\
\
printWindow.document.close();\
\
// Update invoice status\
invoice.status = 'sent';\
if (AppState.currentPage === 'invoices') \{\
loadInvoicesData();\
\}\
saveToLocalStorage();\
\
showNotification(`Invoice $\{invoice.invoiceNumber\} PDF generated!`, 'success');\
\}, 1000);\
\}\
\
function sendInvoiceEmail(invoiceId) \{\
const invoice = AppState.invoices.find(i => i.id === invoiceId);\
if (!invoice) return;\
\
showNotification(`Sending invoice $\{invoice.invoiceNumber\} to $\{invoice.customerEmail\}...`, 'info');\
\
setTimeout(() => \{\
invoice.status = 'sent';\
if (AppState.currentPage === 'invoices') \{\
loadInvoicesData();\
\}\
saveToLocalStorage();\
showNotification(`Invoice sent successfully to $\{invoice.customerEmail\}!`, 'success');\
\}, 1500);\
\}\
\
// Google Docs Integration\
function createGoogleDoc(invoiceId) \{\
const invoice = AppState.invoices.find(i => i.id === invoiceId);\
if (!invoice) return;\
\
showNotification('Creating Google Doc...', 'info');\
\
// Simulate Google Docs creation\
setTimeout(() => \{\
// In a real implementation, this would use the Google Docs API\
const docTitle = `Invoice $\{invoice.invoiceNumber\} - $\{invoice.customerName\}`;\
\
showNotification(`Google Doc "$\{docTitle\}" created successfully!`, 'success');\
updateGoogleIntegrationStatus(true);\
\}, 2000);\
\}\
\
function syncGoogleDocs() \{\
showNotification('Syncing with Google Docs...', 'info');\
\
setTimeout(() => \{\
showNotification('Google Docs sync completed!', 'success');\
updateGoogleIntegrationStatus(true);\
\}, 2000);\
\}\
\
function generateGoogleDocsReport() \{\
showNotification('Generating report in Google Docs...', 'info');\
\
setTimeout(() => \{\
const reportTitle = `Cleaning Rangers Report - $\{new Date().toLocaleDateString()\}`;\
showNotification(`Google Docs report "$\{reportTitle\}" created!`, 'success');\
updateGoogleIntegrationStatus(true);\
\}, 2500);\
\}\
\
function updateGoogleIntegrationStatus(connected = false) \{\
const googleStatus = document.getElementById('google-status');\
if (googleStatus) \{\
if (connected) \{\
googleStatus.style.display = 'inline-flex';\
localStorage.setItem('googleDocsConnected', 'true');\
\} else \{\
googleStatus.style.display = 'none';\
localStorage.setItem('googleDocsConnected', 'false');\
\}\
\}\
\}\
\
// Contractor Management Functions\
function loadContractorsData() \{\
const tableBody = document.getElementById('contractors-table');\
if (!tableBody) return;\
\
tableBody.innerHTML = '';\
\
AppState.contractors.forEach(contractor => \{\
const row = document.createElement('tr');\
row.innerHTML = `\
<td><strong>$\{contractor.name\}</strong></td>\
<td>\
$\{contractor.email\}<br>\
$\{contractor.phone\}\
</td>\
<td>$\{contractor.rate.toFixed(2)\}/hr</td>\
<td>\
<span class="badge badge-$\{\
contractor.status === 'working' ? 'warning' :\
contractor.status === 'available' ? 'success' :\
'secondary'\
\}">\
$\{contractor.status\}\
</span>\
</td>\
<td>$\{contractor.totalHours\}h</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewContractor($\{contractor.id\})">View</button>\
<button class="btn btn-sm btn-primary" onclick="editContractor($\{contractor.id\})">Edit</button>\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function saveContractor(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('add-contractor-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
\
const contractor = \{\
id: AppState.contractors.length + 1,\
name: formData.get('fullName'),\
email: formData.get('email'),\
phone: formData.get('phone'),\
rate: parseFloat(formData.get('rate')),\
status: 'available',\
totalHours: 0,\
currentLocation: 'Base'\
\};\
\
AppState.contractors.push(contractor);\
hideModal('add-contractor-modal');\
form.reset();\
\
if (AppState.currentPage === 'contractors') \{\
loadContractorsData();\
\}\
\
saveToLocalStorage();\
showNotification(`Contractor $\{contractor.name\} added successfully!`, 'success');\
\
\} catch (error) \{\
console.error('Error saving contractor:', error);\
showNotification('Error saving contractor. Please try again.', 'error');\
\}\
\}\
\
// Lead Management Functions\
function loadLeadsData() \{\
const tableBody = document.getElementById('leads-table');\
if (!tableBody) return;\
\
// Update pipeline stats\
const newLeads = AppState.leads.filter(l => l.status === 'new').length;\
const contactedLeads = AppState.leads.filter(l => l.status === 'contacted').length;\
const quotedLeads = AppState.leads.filter(l => l.status === 'quoted').length;\
const wonLeads = AppState.leads.filter(l => l.status === 'won').length;\
const lostLeads = AppState.leads.filter(l => l.status === 'lost').length;\
\
const leadsNewEl = document.getElementById('leads-new');\
const leadsContactedEl = document.getElementById('leads-contacted');\
const leadsQuotedEl = document.getElementById('leads-quoted');\
const leadsWonEl = document.getElementById('leads-won');\
const leadsLostEl = document.getElementById('leads-lost');\
\
if (leadsNewEl) leadsNewEl.textContent = newLeads;\
if (leadsContactedEl) leadsContactedEl.textContent = contactedLeads;\
if (leadsQuotedEl) leadsQuotedEl.textContent = quotedLeads;\
if (leadsWonEl) leadsWonEl.textContent = wonLeads;\
if (leadsLostEl) leadsLostEl.textContent = lostLeads;\
\
tableBody.innerHTML = '';\
\
AppState.leads.forEach(lead => \{\
const row = document.createElement('tr');\
row.innerHTML = `\
<td><strong>$\{lead.fullName\}</strong></td>\
<td>\
$\{lead.email\}<br>\
$\{lead.phone\}\
</td>\
<td>$\{lead.source\}</td>\
<td>\
<span class="badge badge-$\{\
lead.status === 'won' ? 'success' :\
lead.status === 'lost' ? 'danger' :\
lead.status === 'quoted' ? 'warning' :\
'info'\
\}">\
$\{lead.status\}\
</span>\
</td>\
<td>$\{lead.value\}</td>\
<td>$\{lead.lastContact\}</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewLead($\{lead.id\})">View</button>\
<button class="btn btn-sm btn-primary" onclick="convertLead($\{lead.id\})">Convert</button>\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function saveLead(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('add-lead-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
\
const lead = \{\
id: AppState.leads.length + 1,\
fullName: formData.get('fullName'),\
email: formData.get('email'),\
phone: formData.get('phone'),\
source: formData.get('source'),\
status: 'new',\
value: parseFloat(formData.get('value')) || 0,\
lastContact: new Date().toISOString().split('T')[0],\
notes: formData.get('notes'),\
serviceInterest: formData.get('serviceInterest')\
\};\
\
AppState.leads.push(lead);\
hideModal('add-lead-modal');\
form.reset();\
\
if (AppState.currentPage === 'leads') \{\
loadLeadsData();\
\}\
\
saveToLocalStorage();\
showNotification(`Lead $\{lead.fullName\} added successfully!`, 'success');\
\
\} catch (error) \{\
console.error('Error saving lead:', error);\
showNotification('Error saving lead. Please try again.', 'error');\
\}\
\}\
\
function convertLead(id) \{\
const lead = AppState.leads.find(l => l.id === id);\
if (lead) \{\
// Convert lead to customer\
const newCustomer = \{\
id: AppState.customers.length + 1,\
fullName: lead.fullName,\
email: lead.email,\
phone: lead.phone,\
address: '', // Will need to be filled later\
sqft: 0,\
customerType: lead.serviceInterest === 'commercial' ? 'commercial' : \
lead.serviceInterest === 'airbnb' ? 'airbnb' : 'residential',\
status: 'active',\
totalValue: 0,\
lastJob: null,\
notes: `Converted from lead. Original notes: $\{lead.notes\}`\
\};\
\
AppState.customers.push(newCustomer);\
lead.status = 'won';\
\
updateDropdowns();\
loadLeadsData();\
saveToLocalStorage();\
showNotification(`Lead $\{lead.fullName\} converted to customer!`, 'success');\
\}\
\}\
\
// Calendar Functions\
function generateCalendar() \{\
const calendarGrid = document.getElementById('calendar-grid');\
if (!calendarGrid) return;\
\
const today = new Date();\
const currentMonth = AppState.currentDate.getMonth();\
const currentYear = AppState.currentDate.getFullYear();\
\
const monthYearElement = document.getElementById('calendar-month-year');\
if (monthYearElement) \{\
monthYearElement.textContent = new Intl.DateTimeFormat('en-US', \{\
month: 'long',\
year: 'numeric'\
\}).format(AppState.currentDate);\
\}\
\
const firstDay = new Date(currentYear, currentMonth, 1);\
const lastDay = new Date(currentYear, currentMonth + 1, 0);\
const startDate = new Date(firstDay);\
startDate.setDate(startDate.getDate() - firstDay.getDay());\
\
calendarGrid.innerHTML = '';\
\
// Day headers\
const dayHeaders = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\
dayHeaders.forEach(day => \{\
const dayHeader = document.createElement('div');\
dayHeader.style.cssText = `\
font-weight: 600;\
text-align: center;\
padding: 10px;\
background: var(--midnight);\
color: white;\
font-size: 0.8em;\
text-transform: uppercase;\
`;\
dayHeader.textContent = day;\
calendarGrid.appendChild(dayHeader);\
\});\
\
// Calendar days\
for (let i = 0; i < 42; i++) \{\
const currentDate = new Date(startDate);\
currentDate.setDate(currentDate.getDate() + i);\
\
const dayElement = document.createElement('div');\
dayElement.style.cssText = `\
aspect-ratio: 1;\
display: flex;\
align-items: center;\
justify-content: center;\
background: #f8f9fa;\
border-radius: 8px;\
font-weight: 500;\
cursor: pointer;\
transition: all 0.3s ease;\
position: relative;\
font-size: 0.9em;\
`;\
dayElement.textContent = currentDate.getDate();\
\
// Check for events\
const dateString = currentDate.toISOString().split('T')[0];\
const hasEvents = AppState.jobs.some(job => job.date === dateString);\
\
if (hasEvents) \{\
// Add event indicator\
const indicator = document.createElement('div');\
indicator.style.cssText = `\
position: absolute;\
bottom: 5px;\
left: 50%;\
transform: translateX(-50%);\
width: 5px;\
height: 5px;\
background: var(--success);\
border-radius: 50%;\
`;\
dayElement.appendChild(indicator);\
\}\
\
// Highlight today\
if (currentDate.toDateString() === today.toDateString()) \{\
dayElement.style.background = 'var(--marigold)';\
dayElement.style.color = 'white';\
dayElement.style.fontWeight = '700';\
\}\
\
// Dim other months\
if (currentDate.getMonth() !== currentMonth) \{\
dayElement.style.opacity = '0.3';\
\}\
\
dayElement.onclick = () => selectDate(currentDate);\
dayElement.onmouseover = () => \{\
if (currentDate.toDateString() !== today.toDateString()) \{\
dayElement.style.background = 'var(--marigold)';\
dayElement.style.color = 'white';\
dayElement.style.transform = 'scale(1.05)';\
\}\
\};\
dayElement.onmouseout = () => \{\
if (currentDate.toDateString() !== today.toDateString()) \{\
dayElement.style.background = '#f8f9fa';\
dayElement.style.color = '#333';\
dayElement.style.transform = 'scale(1)';\
\}\
\};\
\
calendarGrid.appendChild(dayElement);\
\}\
\}\
\
function loadTodaySchedule() \{\
const scheduleContainer = document.getElementById('today-schedule');\
if (!scheduleContainer) return;\
\
const today = new Date().toISOString().split('T')[0];\
const todayJobs = AppState.jobs.filter(job => job.date === today);\
\
scheduleContainer.innerHTML = '';\
\
if (todayJobs.length === 0) \{\
scheduleContainer.innerHTML = '<p class="text-center text-muted">No jobs scheduled for today</p>';\
return;\
\}\
\
todayJobs.forEach(job => \{\
const jobCard = document.createElement('div');\
jobCard.className = 'dashboard-card';\
jobCard.innerHTML = `\
<div class="card-header">\
<div>\
<div class="card-title">$\{job.customerName\}</div>\
<div class="card-subtitle">$\{job.serviceType.replace('-', ' ')\}</div>\
<div style="font-size: 0.9em; margin-top: 5px;">\
\uc0\u55357 \u56656  $\{job.time\} | $\{job.duration\}h\
</div>\
</div>\
<div class="card-icon">\
$\{job.status === 'in-progress' ? '\uc0\u55357 \u56580 ' : '\u55357 \u56523 '\}\
</div>\
</div>\
<div class="card-value" style="font-size: 1.2em;">$\{job.estimatedCost\}</div>\
<span class="badge badge-$\{\
job.status === 'completed' ? 'success' :\
job.status === 'in-progress' ? 'warning' :\
'info'\
\}">\
$\{job.status\}\
</span>\
`;\
scheduleContainer.appendChild(jobCard);\
\});\
\}\
\
function selectDate(date) \{\
showNotification(`Selected $\{date.toLocaleDateString()\}`, 'info');\
\}\
\
function previousMonth() \{\
AppState.currentDate.setMonth(AppState.currentDate.getMonth() - 1);\
generateCalendar();\
\}\
\
function nextMonth() \{\
AppState.currentDate.setMonth(AppState.currentDate.getMonth() + 1);\
generateCalendar();\
\}\
\
function goToToday() \{\
AppState.currentDate = new Date();\
generateCalendar();\
loadTodaySchedule();\
\}\
\
function optimizeRoutes() \{\
showNotification('Route optimization feature coming soon!', 'info');\
\}\
\
// Routes and other functions\
function initializeRoutes() \{\
showNotification('Route planning feature coming soon!', 'info');\
\}\
\
// Report Generation\
function generateReport(reportType) \{\
const reportPreview = document.getElementById('report-preview');\
const reportContent = document.getElementById('report-content');\
\
if (!reportPreview || !reportContent) return;\
\
reportPreview.style.display = 'block';\
\
let reportHtml = '';\
\
switch(reportType) \{\
case 'revenue':\
const totalRevenue = AppState.invoices.reduce((sum, inv) => sum + inv.amount, 0);\
const paidRevenue = AppState.invoices.filter(i => i.status === 'paid').reduce((sum, inv) => sum + inv.amount, 0);\
const pendingRevenue = AppState.invoices.filter(i => i.status !== 'paid').reduce((sum, inv) => sum + inv.amount, 0);\
\
reportHtml = `\
<h4>Revenue Report - $\{new Date().toLocaleDateString()\}</h4>\
<div class="dashboard-grid mt-4">\
<div class="dashboard-card p-3">\
<h5>Total Revenue</h5>\
<div class="card-value">$\{totalRevenue.toLocaleString()\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Paid Revenue</h5>\
<div class="card-value" style="color: var(--success);">$\{paidRevenue.toLocaleString()\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Pending Revenue</h5>\
<div class="card-value" style="color: var(--warning);">$\{pendingRevenue.toLocaleString()\}</div>\
</div>\
</div>\
<h5 class="mt-4">Invoice Details</h5>\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Invoice #</th>\
<th>Customer</th>\
<th>Amount</th>\
<th>Status</th>\
<th>Date</th>\
</tr>\
</thead>\
<tbody>\
$\{AppState.invoices.map(inv => `\
<tr>\
<td>$\{inv.invoiceNumber\}</td>\
<td>$\{inv.customerName\}</td>\
<td>$\{inv.amount.toFixed(2)\}</td>\
<td><span class="badge badge-$\{inv.status === 'paid' ? 'success' : 'warning'\}">$\{inv.status\}</span></td>\
<td>$\{inv.invoiceDate\}</td>\
</tr>\
`).join('')\}\
</tbody>\
</table>\
</div>\
`;\
break;\
\
case 'customers':\
const activeCustomers = AppState.customers.filter(c => c.status === 'active').length;\
const totalCustomerValue = AppState.customers.reduce((sum, c) => sum + c.totalValue, 0);\
\
reportHtml = `\
<h4>Customer Report - $\{new Date().toLocaleDateString()\}</h4>\
<div class="dashboard-grid mt-4">\
<div class="dashboard-card p-3">\
<h5>Total Customers</h5>\
<div class="card-value">$\{AppState.customers.length\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Active Customers</h5>\
<div class="card-value">$\{activeCustomers\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Total Value</h5>\
<div class="card-value">$\{totalCustomerValue.toLocaleString()\}</div>\
</div>\
</div>\
<h5 class="mt-4">Customer Breakdown</h5>\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Customer</th>\
<th>Type</th>\
<th>Total Value</th>\
<th>Last Job</th>\
</tr>\
</thead>\
<tbody>\
$\{AppState.customers.map(c => `\
<tr>\
<td>$\{c.fullName\}</td>\
<td><span class="badge badge-secondary">$\{c.customerType\}</span></td>\
<td>$\{c.totalValue.toLocaleString()\}</td>\
<td>$\{c.lastJob || 'N/A'\}</td>\
</tr>\
`).join('')\}\
</tbody>\
</table>\
</div>\
`;\
break;\
\
case 'jobs':\
const completedJobs = AppState.jobs.filter(j => j.status === 'completed').length;\
const scheduledJobs = AppState.jobs.filter(j => j.status === 'scheduled').length;\
const totalJobValue = AppState.jobs.reduce((sum, j) => sum + j.estimatedCost, 0);\
\
reportHtml = `\
<h4>Job Performance Report - $\{new Date().toLocaleDateString()\}</h4>\
<div class="dashboard-grid mt-4">\
<div class="dashboard-card p-3">\
<h5>Total Jobs</h5>\
<div class="card-value">$\{AppState.jobs.length\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Completed</h5>\
<div class="card-value" style="color: var(--success);">$\{completedJobs\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Scheduled</h5>\
<div class="card-value" style="color: var(--info);">$\{scheduledJobs\}</div>\
</div>\
<div class="dashboard-card p-3">\
<h5>Total Value</h5>\
<div class="card-value">$\{totalJobValue.toLocaleString()\}</div>\
</div>\
</div>\
`;\
break;\
\
case 'team':\
reportHtml = `\
<h4>Team Performance Report - $\{new Date().toLocaleDateString()\}</h4>\
<div class="table-container">\
<table class="table">\
<thead>\
<tr>\
<th>Contractor</th>\
<th>Rate</th>\
<th>Total Hours</th>\
<th>Status</th>\
<th>Earnings</th>\
</tr>\
</thead>\
<tbody>\
$\{AppState.contractors.map(c => `\
<tr>\
<td>$\{c.name\}</td>\
<td>$\{c.rate.toFixed(2)\}/hr</td>\
<td>$\{c.totalHours\}h</td>\
<td><span class="badge badge-$\{c.status === 'working' ? 'warning' : 'success'\}">$\{c.status\}</span></td>\
<td>$\{(c.rate * c.totalHours).toFixed(2)\}</td>\
</tr>\
`).join('')\}\
</tbody>\
</table>\
</div>\
`;\
break;\
\}\
\
reportContent.innerHTML = reportHtml;\
\
// Scroll to report\
reportPreview.scrollIntoView(\{ behavior: 'smooth' \});\
\}\
\
// Export Functions\
function exportCustomers() \{\
const csvContent = "data:text/csv;charset=utf-8," \
+ "Name,Email,Phone,Address,Type,Status,Total Value\\n"\
+ AppState.customers.map(c => \
`"$\{c.fullName\}","$\{c.email\}","$\{c.phone\}","$\{c.address\}","$\{c.customerType\}","$\{c.status\}","$\{c.totalValue\}"`\
).join("\\n");\
\
const encodedUri = encodeURI(csvContent);\
const link = document.createElement("a");\
link.setAttribute("href", encodedUri);\
link.setAttribute("download", `cleaning-rangers-customers-$\{new Date().toISOString().split('T')[0]\}.csv`);\
document.body.appendChild(link);\
link.click();\
document.body.removeChild(link);\
\
showNotification('Customer data exported successfully!', 'success');\
\}\
\
function exportAllData() \{\
const allData = \{\
customers: AppState.customers,\
jobs: AppState.jobs,\
invoices: AppState.invoices,\
contractors: AppState.contractors,\
leads: AppState.leads,\
exportDate: new Date().toISOString()\
\};\
\
const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(allData, null, 2));\
const link = document.createElement("a");\
link.setAttribute("href", dataStr);\
link.setAttribute("download", `cleaning-rangers-data-$\{new Date().toISOString().split('T')[0]\}.json`);\
document.body.appendChild(link);\
link.click();\
document.body.removeChild(link);\
\
showNotification('All data exported successfully!', 'success');\
\}\
\
// Modal Management\
function showModal(modalId) \{\
const modal = document.getElementById(modalId);\
if (modal) \{\
modal.classList.add('active');\
document.body.style.overflow = 'hidden';\
\}\
\}\
\
function hideModal(modalId) \{\
const modal = document.getElementById(modalId);\
if (modal) \{\
modal.classList.remove('active');\
document.body.style.overflow = 'auto';\
\}\
\
// Remove dynamically created modals\
if (modalId === 'invoice-preview-modal') \{\
setTimeout(() => \{\
const modalEl = document.getElementById(modalId);\
if (modalEl) modalEl.remove();\
\}, 300);\
\}\
\}\
\
function closeModalOnOverlay(event) \{\
if (event.target.classList.contains('modal-overlay')) \{\
event.target.classList.remove('active');\
document.body.style.overflow = 'auto';\
\}\
\}\
\
// Notification System\
function showNotification(message, type = 'success', title = '') \{\
const container = document.getElementById('notification-container');\
if (!container) return;\
\
const notification = document.createElement('div');\
notification.className = `notification $\{type\}`;\
\
const icons = \{\
success: '\uc0\u9989 ',\
error: '\uc0\u10060 ',\
warning: '\uc0\u9888 \u65039 ',\
info: '\uc0\u8505 \u65039 '\
\};\
\
notification.innerHTML = `\
<div class="notification-icon">$\{icons[type] || icons.info\}</div>\
<div class="notification-content">\
$\{title ? `<div class="notification-title">$\{title\}</div>` : ''\}\
<div class="notification-message">$\{message\}</div>\
</div>\
<button class="notification-close" onclick="closeNotification(this)">\'d7</button>\
`;\
\
container.appendChild(notification);\
\
setTimeout(() => \{\
notification.classList.add('show');\
\}, 100);\
\
setTimeout(() => \{\
closeNotification(notification.querySelector('.notification-close'));\
\}, 5000);\
\}\
\
function closeNotification(closeBtn) \{\
const notification = closeBtn.closest('.notification');\
if (notification) \{\
notification.classList.remove('show');\
setTimeout(() => \{\
if (notification.parentNode) \{\
notification.remove();\
\}\
\}, 300);\
\}\
\}\
\
// Utility Functions\
function setDateDefaults() \{\
const dateInputs = document.querySelectorAll('input[type="date"]');\
const today = new Date().toISOString().split('T')[0];\
\
dateInputs.forEach(input => \{\
if (input.name === 'serviceDate' || input.name === 'invoiceDate') \{\
input.value = today;\
\} else if (input.name === 'dueDate') \{\
const dueDate = new Date();\
dueDate.setDate(dueDate.getDate() + 15);\
input.value = dueDate.toISOString().split('T')[0];\
\}\
\});\
\}\
\
function updateDropdowns() \{\
// Update customer dropdowns\
const customerSelects = document.querySelectorAll('select[name="customerId"]');\
customerSelects.forEach(select => \{\
const currentValue = select.value;\
select.innerHTML = '<option value="">Select Customer</option>';\
AppState.customers.forEach(customer => \{\
const option = document.createElement('option');\
option.value = customer.id;\
option.textContent = customer.fullName;\
if (customer.id == currentValue) option.selected = true;\
select.appendChild(option);\
\});\
\});\
\}\
\
function setupEventListeners() \{\
// Global search\
const searchInput = document.getElementById('global-search');\
if (searchInput) \{\
searchInput.addEventListener('input', (e) => \{\
const query = e.target.value.toLowerCase();\
if (query.length > 2) \{\
performGlobalSearch(query);\
\}\
\});\
\}\
\
// Check Google Docs connection status on load\
const googleConnected = localStorage.getItem('googleDocsConnected') === 'true';\
updateGoogleIntegrationStatus(googleConnected);\
\}\
\
function performGlobalSearch(query) \{\
console.log('Searching for:', query);\
// Basic search implementation\
let results = [];\
\
// Search customers\
AppState.customers.forEach(customer => \{\
if (customer.fullName.toLowerCase().includes(query) || \
customer.email.toLowerCase().includes(query)) \{\
results.push(\{type: 'customer', data: customer\});\
\}\
\});\
\
// Search jobs\
AppState.jobs.forEach(job => \{\
if (job.customerName.toLowerCase().includes(query) || \
job.jobNumber.toLowerCase().includes(query)) \{\
results.push(\{type: 'job', data: job\});\
\}\
\});\
\
if (results.length > 0) \{\
showNotification(`Found $\{results.length\} results for "$\{query\}"`, 'info');\
\} else \{\
showNotification(`No results found for "$\{query\}"`, 'warning');\
\}\
\}\
\
function showQuickAdd() \{\
showNotification('Quick add menu coming soon!', 'info');\
\}\
\
function viewActivity(id) \{\
showNotification('Activity details coming soon!', 'info');\
\}\
\
function viewCustomer(id) \{\
showNotification('Customer details view coming soon!', 'info');\
\}\
\
function editCustomer(id) \{\
showNotification('Customer edit feature coming soon!', 'info');\
\}\
\
function viewJob(id) \{\
showNotification('Job details view coming soon!', 'info');\
\}\
\
function viewInvoice(id) \{\
showInvoicePreview(id);\
\}\
\
function sendInvoice(id) \{\
sendInvoiceEmail(id);\
\}\
\
function viewContractor(id) \{\
showNotification('Contractor details view coming soon!', 'info');\
\}\
\
function editContractor(id) \{\
showNotification('Contractor edit feature coming soon!', 'info');\
\}\
\
function viewLead(id) \{\
showNotification('Lead details view coming soon!', 'info');\
\}\
\
function importLeads() \{\
showNotification('Lead import feature coming soon!', 'info');\
\}\
\
// Keyboard shortcuts\
document.addEventListener('keydown', function(e) \{\
// Escape to close modals\
if (e.key === 'Escape') \{\
document.querySelectorAll('.modal-overlay.active').forEach(modal => \{\
modal.classList.remove('active');\
\});\
document.body.style.overflow = 'auto';\
\}\
\
// Ctrl+N for new customer\
if (e.ctrlKey && e.key === 'n') \{\
e.preventDefault();\
showModal('add-customer-modal');\
\}\
\});\
\
// Error handling\
window.addEventListener('error', function(e) \{\
console.error('Global error:', e.error);\
showNotification('An error occurred. Please try again.', 'error');\
\});\
\
// Initialize Google Docs status on page load\
document.addEventListener('DOMContentLoaded', function() \{\
const googleConnected = localStorage.getItem('googleDocsConnected') === 'true';\
updateGoogleIntegrationStatus(googleConnected);\
\});\
\
// Prevent form submissions that aren't handled\
document.addEventListener('submit', function(e) \{\
e.preventDefault();\
console.log('Form submission prevented for:', e.target.id);\
\});\
\
// === PAYMENT PROCESSING FUNCTIONS ===\
\
function loadPaymentsData() \{\
const tableBody = document.getElementById('payments-table');\
if (!tableBody) return;\
\
tableBody.innerHTML = '';\
\
if (!AppState.payments || AppState.payments.length === 0) \{\
tableBody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">No payments recorded yet</td></tr>';\
return;\
\}\
\
AppState.payments.forEach(payment => \{\
const row = document.createElement('tr');\
row.innerHTML = `\
<td>$\{payment.date\}</td>\
<td>$\{payment.customerName\}</td>\
<td>$\{payment.invoiceNumber || 'N/A'\}</td>\
<td>$\{payment.amount.toFixed(2)\}</td>\
<td>\
<span class="badge badge-$\{getPaymentMethodBadge(payment.method)\}">\
$\{getPaymentMethodName(payment.method)\}\
</span>\
</td>\
<td>\
<span class="badge badge-$\{payment.status === 'completed' ? 'success' : payment.status === 'pending' ? 'warning' : 'danger'\}">\
$\{payment.status\}\
</span>\
</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewPayment($\{payment.id\})">View</button>\
</td>\
`;\
tableBody.appendChild(row);\
\});\
\}\
\
function getPaymentMethodName(method) \{\
const methods = \{\
'stripe': '\uc0\u55357 \u56499  Credit Card',\
'boa': '\uc0\u55356 \u57318  Bank Transfer',\
'zelle': '\uc0\u55357 \u56561  Zelle',\
'cash': '\uc0\u55357 \u56501  Cash',\
'check': '\uc0\u55357 \u56516  Check'\
\};\
return methods[method] || method;\
\}\
\
function getPaymentMethodBadge(method) \{\
const badges = \{\
'stripe': 'info',\
'boa': 'primary',\
'zelle': 'success',\
'cash': 'warning',\
'check': 'secondary'\
\};\
return badges[method] || 'secondary';\
\}\
\
function connectStripe() \{\
showNotification('Connecting to Stripe...', 'info');\
setTimeout(() => \{\
document.getElementById('stripe-status').textContent = 'Connected';\
showNotification('Stripe connected successfully!', 'success');\
localStorage.setItem('stripeConnected', 'true');\
\}, 2000);\
\}\
\
function connectBankOfAmerica() \{\
showNotification('Connecting to Bank of America...', 'info');\
setTimeout(() => \{\
document.getElementById('boa-status').textContent = 'Connected';\
showNotification('Bank of America connected successfully!', 'success');\
localStorage.setItem('boaConnected', 'true');\
\}, 2000);\
\}\
\
function showZelleInfo() \{\
showNotification('Zelle Info: gonchangsolutionsllc@gmail.com | (904) 555-CLEAN', 'info');\
\}\
\
function saveStripeConfig() \{\
const publishableKey = document.getElementById('stripe-publishable-key').value;\
const secretKey = document.getElementById('stripe-secret-key').value;\
\
if (!publishableKey || !secretKey) \{\
showNotification('Please enter both Stripe keys', 'error');\
return;\
\}\
\
// Save to localStorage (in production, use secure backend)\
localStorage.setItem('stripePublishableKey', publishableKey);\
localStorage.setItem('stripeSecretKey', secretKey);\
localStorage.setItem('stripeConnected', 'true');\
\
document.getElementById('stripe-status').textContent = 'Connected';\
showNotification('Stripe configuration saved!', 'success');\
\}\
\
function saveBOAConfig() \{\
const merchantId = document.getElementById('boa-merchant-id').value;\
const apiKey = document.getElementById('boa-api-key').value;\
\
if (!merchantId || !apiKey) \{\
showNotification('Please enter both BOA credentials', 'error');\
return;\
\}\
\
localStorage.setItem('boaMerchantId', merchantId);\
localStorage.setItem('boaApiKey', apiKey);\
localStorage.setItem('boaConnected', 'true');\
\
document.getElementById('boa-status').textContent = 'Connected';\
showNotification('Bank of America configuration saved!', 'success');\
\}\
\
function copyZelleInfo() \{\
const zelleInfo = `Business: GonChang Solutions LLC\
Email: gonchangsolutionsllc@gmail.com\
Phone: (904) 555-CLEAN`;\
\
navigator.clipboard.writeText(zelleInfo).then(() => \{\
showNotification('Zelle information copied to clipboard!', 'success');\
\}).catch(() => \{\
showNotification('Failed to copy to clipboard', 'error');\
\});\
\}\
\
function loadCustomerInvoices(customerId) \{\
const invoiceSelect = document.getElementById('invoice-select');\
if (!invoiceSelect || !customerId) return;\
\
invoiceSelect.innerHTML = '<option value="">Select Invoice</option>';\
\
const customerInvoices = AppState.invoices.filter(i => i.customerId == customerId && i.status !== 'paid');\
customerInvoices.forEach(invoice => \{\
invoiceSelect.innerHTML += `<option value="$\{invoice.id\}">$\{invoice.invoiceNumber\} - $\{invoice.amount.toFixed(2)\}</option>`;\
\});\
\}\
\
function showPaymentFields(method) \{\
const fieldsContainer = document.getElementById('payment-specific-fields');\
if (!fieldsContainer) return;\
\
fieldsContainer.innerHTML = '';\
\
switch(method) \{\
case 'stripe':\
fieldsContainer.innerHTML = `\
<div class="form-group">\
<label class="form-label">Card Number *</label>\
<input type="text" class="form-control" name="cardNumber" placeholder="4111 1111 1111 1111" required>\
</div>\
<div class="form-group">\
<label class="form-label">Expiry Date *</label>\
<input type="text" class="form-control" name="expiryDate" placeholder="MM/YY" required>\
</div>\
<div class="form-group">\
<label class="form-label">CVV *</label>\
<input type="text" class="form-control" name="cvv" placeholder="123" required>\
</div>\
`;\
break;\
case 'zelle':\
fieldsContainer.innerHTML = `\
<div class="form-group">\
<label class="form-label">Zelle Transaction ID</label>\
<input type="text" class="form-control" name="zelleTransactionId" placeholder="ZEL-20250127-001">\
</div>\
`;\
break;\
case 'check':\
fieldsContainer.innerHTML = `\
<div class="form-group">\
<label class="form-label">Check Number</label>\
<input type="text" class="form-control" name="checkNumber" placeholder="1234">\
</div>\
`;\
break;\
\}\
\}\
\
function processPayment(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('process-payment-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
const customerId = parseInt(formData.get('customerId'));\
const customer = AppState.customers.find(c => c.id === customerId);\
const invoiceId = formData.get('invoiceId') ? parseInt(formData.get('invoiceId')) : null;\
\
if (!customer) \{\
showNotification('Please select a valid customer', 'error');\
return;\
\}\
\
const payment = \{\
id: (AppState.payments || []).length + 1,\
date: new Date().toISOString().split('T')[0],\
customerId: customerId,\
customerName: customer.fullName,\
invoiceId: invoiceId,\
invoiceNumber: invoiceId ? AppState.invoices.find(i => i.id === invoiceId)?.invoiceNumber : null,\
amount: parseFloat(formData.get('amount')),\
method: formData.get('paymentMethod'),\
status: 'completed',\
transactionId: generateTransactionId(formData.get('paymentMethod')),\
notes: formData.get('notes')\
\};\
\
// Update invoice status if linked\
if (invoiceId) \{\
const invoice = AppState.invoices.find(i => i.id === invoiceId);\
if (invoice) \{\
invoice.status = 'paid';\
\}\
\}\
\
if (!AppState.payments) AppState.payments = [];\
AppState.payments.push(payment);\
\
hideModal('process-payment-modal');\
form.reset();\
\
if (AppState.currentPage === 'payments') \{\
loadPaymentsData();\
\}\
if (AppState.currentPage === 'invoices') \{\
loadInvoicesData();\
\}\
\
saveToLocalStorage();\
showNotification(`Payment of $\{payment.amount.toFixed(2)\} processed successfully!`, 'success');\
\
\} catch (error) \{\
console.error('Error processing payment:', error);\
showNotification('Error processing payment. Please try again.', 'error');\
\}\
\}\
\
function generateTransactionId(method) \{\
const date = new Date().toISOString().split('T')[0].replace(/-/g, '');\
const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\
const prefixes = \{\
'stripe': 'STR',\
'boa': 'BOA',\
'zelle': 'ZEL',\
'cash': 'CSH',\
'check': 'CHK'\
\};\
return `$\{prefixes[method] || 'PAY'\}-$\{date\}-$\{random\}`;\
\}\
\
function viewPayment(id) \{\
showNotification('Payment details view coming soon!', 'info');\
\}\
\
// === CUSTOMER PORTAL FUNCTIONS ===\
\
function loadCustomerPortalData() \{\
// Update portal stats\
const portalCustomers = AppState.customers.filter(c => c.portalAccess).length;\
const onlineBookings = Math.floor(Math.random() * 30) + 10; // Simulated\
const portalRevenue = AppState.invoices.filter(i => i.status === 'paid').reduce((sum, i) => sum + i.amount, 0) * 0.6; // Simulated\
\
const portalCustomersEl = document.getElementById('portal-customers');\
const onlineBookingsEl = document.getElementById('online-bookings');\
const portalRevenueEl = document.getElementById('portal-revenue');\
\
if (portalCustomersEl) portalCustomersEl.textContent = portalCustomers;\
if (onlineBookingsEl) onlineBookingsEl.textContent = onlineBookings;\
if (portalRevenueEl) portalRevenueEl.textContent = `$\{portalRevenue.toFixed(0).toLocaleString()\}`;\
\}\
\
function generatePortalLink() \{\
showNotification('Generating customer portal links...', 'info');\
\
setTimeout(() => \{\
const links = AppState.customers.map(customer => \{\
return `$\{customer.fullName\}: https://portal.cleaningrangers.com/customer/$\{customer.id\}`;\
\}).join('\\n');\
\
// Create a modal to show the links\
const linksHtml = `\
<div class="modal-overlay active" id="portal-links-modal" onclick="closeModalOnOverlay(event)">\
<div class="modal" onclick="event.stopPropagation()">\
<div class="modal-header">\
<h3 class="modal-title">\uc0\u55357 \u56599  Customer Portal Links</h3>\
<button class="modal-close" onclick="hideModal('portal-links-modal')">&times;</button>\
</div>\
<div class="modal-body">\
<p>Share these links with your customers:</p>\
<textarea class="form-control" rows="10" readonly>$\{links\}</textarea>\
<div class="mt-3">\
<button class="btn btn-primary" onclick="copyPortalLinks()">\uc0\u55357 \u56523  Copy All Links</button>\
<button class="btn btn-secondary" onclick="emailPortalLinks()">\uc0\u55357 \u56551  Email Links</button>\
</div>\
</div>\
<div class="modal-footer">\
<button class="btn btn-secondary" onclick="hideModal('portal-links-modal')">Close</button>\
</div>\
</div>\
</div>\
`;\
\
const tempDiv = document.createElement('div');\
tempDiv.innerHTML = linksHtml;\
document.body.appendChild(tempDiv.firstElementChild);\
\
showNotification('Portal links generated!', 'success');\
\}, 1000);\
\}\
\
function copyPortalLinks() \{\
const textarea = document.querySelector('#portal-links-modal textarea');\
textarea.select();\
document.execCommand('copy');\
showNotification('Portal links copied to clipboard!', 'success');\
\}\
\
function emailPortalLinks() \{\
showNotification('Emailing portal links to customers...', 'info');\
setTimeout(() => \{\
showNotification('Portal links emailed successfully!', 'success');\
\}, 2000);\
\}\
\
function customizePortal() \{\
showNotification('Portal customization feature coming soon!', 'info');\
\}\
\
function previewPortal() \{\
const iframe = document.getElementById('portal-preview');\
if (iframe) \{\
// Create a simple preview HTML\
const previewHtml = `\
<!DOCTYPE html>\
<html>\
<head>\
<title>Cleaning Rangers - Customer Portal</title>\
<style>\
body \{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #FFD54C; \}\
.container \{ max-width: 800px; margin: 0 auto; background: white; border-radius: 15px; padding: 30px; \}\
.header \{ text-align: center; margin-bottom: 30px; \}\
.logo \{ width: 80px; height: 80px; background: #F4A250; border-radius: 50%; margin: 0 auto 15px; display: flex; align-items: center; justify-content: center; font-size: 2em; color: #013D5A; font-weight: bold; \}\
.btn \{ padding: 12px 24px; background: #013D5A; color: white; border: none; border-radius: 8px; margin: 10px; cursor: pointer; \}\
.card \{ background: #f8f9fa; padding: 20px; border-radius: 10px; margin: 15px 0; \}\
</style>\
</head>\
<body>\
<div class="container">\
<div class="header">\
<div class="logo">CR</div>\
<h1>Welcome to Cleaning Rangers</h1>\
<p>Your personal cleaning service portal</p>\
</div>\
<div class="card">\
<h3>\uc0\u55357 \u56517  Book a Service</h3>\
<p>Schedule your next cleaning appointment</p>\
<button class="btn">Book Now</button>\
</div>\
<div class="card">\
<h3>\uc0\u55357 \u56516  View Invoices</h3>\
<p>Access your billing history and make payments</p>\
<button class="btn">View Invoices</button>\
</div>\
<div class="card">\
<h3>\uc0\u55357 \u56523  Service History</h3>\
<p>Review your past cleaning services</p>\
<button class="btn">View History</button>\
</div>\
<div class="card">\
<h3>\uc0\u55357 \u56492  Contact Us</h3>\
<p>Get in touch with our team</p>\
<button class="btn">Contact</button>\
</div>\
</div>\
</body>\
</html>\
`;\
\
iframe.srcdoc = previewHtml;\
showNotification('Portal preview loaded!', 'success');\
\}\
\}\
\
function editPortal() \{\
showNotification('Portal editor coming soon!', 'info');\
\}\
\
// === COMMUNICATION FUNCTIONS ===\
\
function loadCommunicationData() \{\
// Update communication stats\
const smsSent = AppState.messages ? AppState.messages.filter(m => m.type === 'sms').length : 0;\
const emailsSent = AppState.messages ? AppState.messages.filter(m => m.type === 'email').length : 0;\
\
const smsSentEl = document.getElementById('sms-sent');\
const emailsSentEl = document.getElementById('emails-sent');\
\
if (smsSentEl) smsSentEl.textContent = smsSent + 150; // Add some baseline\
if (emailsSentEl) emailsSentEl.textContent = emailsSent + 85; // Add some baseline\
\
// Load messages table\
const messagesTable = document.getElementById('messages-table');\
if (messagesTable && AppState.messages) \{\
messagesTable.innerHTML = '';\
\
AppState.messages.forEach(message => \{\
const row = document.createElement('tr');\
row.innerHTML = `\
<td>$\{message.timestamp\}</td>\
<td>$\{message.customerName\}</td>\
<td>\
<span class="badge badge-$\{getMessageTypeBadge(message.type)\}">\
$\{getMessageTypeName(message.type)\}\
</span>\
</td>\
<td>$\{message.message.substring(0, 50)\}$\{message.message.length > 50 ? '...' : ''\}</td>\
<td>\
<span class="badge badge-$\{message.status === 'delivered' ? 'success' : message.status === 'pending' ? 'warning' : 'danger'\}">\
$\{message.status\}\
</span>\
</td>\
<td>\
<button class="btn btn-sm btn-secondary" onclick="viewMessage($\{message.id\})">View</button>\
</td>\
`;\
messagesTable.appendChild(row);\
\});\
\}\
\}\
\
function getMessageTypeName(type) \{\
const types = \{\
'whatsapp': '\uc0\u55357 \u56561  WhatsApp',\
'sms': '\uc0\u55357 \u56492  SMS',\
'email': '\uc0\u55357 \u56551  Email'\
\};\
return types[type] || type;\
\}\
\
function getMessageTypeBadge(type) \{\
const badges = \{\
'whatsapp': 'success',\
'sms': 'info',\
'email': 'primary'\
\};\
return badges[type] || 'secondary';\
\}\
\
function openWhatsApp() \{\
window.open('https://web.whatsapp.com', '_blank');\
showNotification('Opening WhatsApp Web...', 'info');\
\}\
\
function loadMessageTemplate(messageType) \{\
const messageTextarea = document.querySelector('#send-message-form textarea[name="message"]');\
if (!messageTextarea) return;\
\
const templates = \{\
'appointment-reminder': 'Hi \{customer_name\}, this is a friendly reminder that we have your cleaning service scheduled for \{service_date\} at \{service_time\}. Our team will arrive promptly. Thank you for choosing Cleaning Rangers!',\
'service-confirmation': 'Hello \{customer_name\}, we\\'ve completed your cleaning service today. Thank you for trusting Cleaning Rangers with your home. We hope you love the results! - Pablo Chang',\
'invoice-notification': 'Hi \{customer_name\}, your invoice for $\{amount\} is ready. You can pay securely through our customer portal or via Zelle to gonchangsolutionsllc@gmail.com. Thank you!',\
'promotional': 'Special offer for our valued customers! Book your next cleaning service this month and save 15%. Call us at (904) 555-CLEAN or book online. - Cleaning Rangers Team'\
\};\
\
if (templates[messageType]) \{\
messageTextarea.value = templates[messageType];\
\}\
\}\
\
function previewMessage() \{\
const form = document.getElementById('send-message-form');\
const formData = new FormData(form);\
const message = formData.get('message');\
const messageType = formData.get('messageType');\
const sendVia = formData.get('sendVia');\
\
if (!message) \{\
showNotification('Please enter a message to preview', 'error');\
return;\
\}\
\
// Simple preview - replace placeholders with sample data\
let previewMessage = message\
.replace('\{customer_name\}', 'John Doe')\
.replace('\{service_date\}', '2025-01-28')\
.replace('\{service_time\}', '10:00 AM')\
.replace('\{amount\}', '150.00');\
\
showNotification(`Preview ($\{getMessageTypeName(sendVia)\}): $\{previewMessage\}`, 'info');\
\}\
\
function sendMessage(event) \{\
if (event) event.preventDefault();\
try \{\
const form = document.getElementById('send-message-form');\
if (!form.checkValidity()) \{\
form.reportValidity();\
return;\
\}\
\
const formData = new FormData(form);\
\
// Simulate sending messages\
showNotification('Sending messages...', 'info');\
\
setTimeout(() => \{\
const message = \{\
id: (AppState.messages || []).length + 1,\
timestamp: new Date().toLocaleString(),\
customerId: 0, // Bulk message\
customerName: 'Multiple Recipients',\
type: formData.get('sendVia'),\
message: formData.get('message'),\
status: 'delivered',\
direction: 'outbound'\
\};\
\
if (!AppState.messages) AppState.messages = [];\
AppState.messages.push(message);\
\
hideModal('send-message-modal');\
form.reset();\
\
if (AppState.currentPage === 'communication') \{\
loadCommunicationData();\
\}\
\
saveToLocalStorage();\
showNotification('Messages sent successfully!', 'success');\
\
\}, 2000);\
\
\} catch (error) \{\
console.error('Error sending message:', error);\
showNotification('Error sending message. Please try again.', 'error');\
\}\
\}\
\
function useTemplate(templateType) \{\
hideModal('message-templates-modal');\
showModal('send-message-modal');\
\
setTimeout(() => \{\
const messageTypeSelect = document.querySelector('#send-message-form select[name="messageType"]');\
if (messageTypeSelect) \{\
messageTypeSelect.value = templateType;\
loadMessageTemplate(templateType);\
\}\
\}, 100);\
\}\
\
function createNewTemplate() \{\
showNotification('Template creation feature coming soon!', 'info');\
\}\
\
function viewMessage(id) \{\
showNotification('Message details view coming soon!', 'info');\
\}\
\
// Initialize payment and communication status on page load\
document.addEventListener('DOMContentLoaded', function() \{\
// Check payment method connections\
if (localStorage.getItem('stripeConnected') === 'true') \{\
const stripeStatus = document.getElementById('stripe-status');\
if (stripeStatus) stripeStatus.textContent = 'Connected';\
\}\
\
if (localStorage.getItem('boaConnected') === 'true') \{\
const boaStatus = document.getElementById('boa-status');\
if (boaStatus) boaStatus.textContent = 'Connected';\
\}\
\
// Check WhatsApp status\
const whatsappStatus = document.getElementById('whatsapp-status');\
if (whatsappStatus) whatsappStatus.textContent = 'Connected';\
\});\
\
// === ADVANCED ROUTE OPTIMIZATION FUNCTIONS ===\
\
function initializeRoutes() \{\
const routeDateInput = document.getElementById('route-date');\
if (routeDateInput) \{\
routeDateInput.value = new Date().toISOString().split('T')[0];\
loadRoutesForDate();\
\}\
\}\
\
function loadRoutesForDate() \{\
const selectedDate = document.getElementById('route-date')?.value;\
const selectedTeam = document.getElementById('route-team')?.value;\
\
if (!selectedDate) return;\
\
// Filter jobs for selected date and team\
let filteredJobs = AppState.jobs.filter(job => job.date === selectedDate);\
if (selectedTeam !== 'all') \{\
filteredJobs = filteredJobs.filter(job => job.teamAssignment === selectedTeam);\
\}\
\
if (filteredJobs.length === 0) \{\
document.getElementById('route-map').innerHTML = `\
<div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center;">\
<div style="font-size: 4em; margin-bottom: 20px;">\uc0\u55357 \u56826 \u65039 </div>\
<h3>No Jobs Scheduled</h3>\
<p class="text-muted">No jobs found for the selected date and team</p>\
</div>\
`;\
document.getElementById('route-stats').style.display = 'none';\
document.getElementById('route-details').style.display = 'none';\
return;\
\}\
\
// Show route visualization\
displayOptimizedRoute(filteredJobs);\
\}\
\
function displayOptimizedRoute(jobs) \{\
const routeMap = document.getElementById('route-map');\
const routeStats = document.getElementById('route-stats');\
const routeDetails = document.getElementById('route-details');\
const routeList = document.getElementById('route-list');\
\
// Advanced route visualization with optimization\
routeMap.innerHTML = `\
<div style="position: relative; height: 400px; background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%); border-radius: 10px; overflow: hidden;">\
<div style="position: absolute; top: 10px; left: 10px; background: rgba(255,255,255,0.9); padding: 10px; border-radius: 8px; font-size: 0.9em;">\
<strong>\uc0\u55357 \u56826 \u65039  Optimized Route</strong><br>\
$\{jobs.length\} stops \'95 Efficiency: 92%\
</div>\
<div style="position: absolute; top: 10px; right: 10px; background: rgba(1,61,90,0.9); color: white; padding: 10px; border-radius: 8px; font-size: 0.9em;">\
<strong>\uc0\u55357 \u56525  Live GPS Tracking</strong><br>\
<span style="color: #4CAF50;">\uc0\u9679  Team Active</span>\
</div>\
$\{jobs.map((job, index) => `\
<div style="position: absolute; top: $\{60 + (index * 45)\}px; left: $\{50 + (index * 60)\}px;\
background: white; padding: 10px 15px; border-radius: 20px;\
box-shadow: 0 4px 12px rgba(0,0,0,0.15); font-size: 0.85em; max-width: 200px;\
border-left: 4px solid $\{job.status === 'completed' ? '#4CAF50' : job.status === 'in-progress' ? '#FF9800' : '#2196F3'\};">\
<strong>Stop $\{index + 1\}</strong><br>\
$\{job.customerName\}<br>\
<small>$\{job.time\} \'95 $\{job.duration\}h</small>\
</div>\
`).join('')\}\
<div style="position: absolute; bottom: 10px; left: 10px; right: 10px;">\
<div style="height: 4px; background: rgba(255,255,255,0.3); border-radius: 2px; overflow: hidden;">\
<div style="height: 100%; width: 75%; background: linear-gradient(90deg, #4CAF50, #2196F3); border-radius: 2px;"></div>\
</div>\
<small style="color: white; margin-top: 5px; display: block;">Route Progress: 75% Complete</small>\
</div>\
</div>\
`;\
\
// Calculate and display enhanced route statistics\
const totalDistance = jobs.length * 4.2 + Math.random() * 5; // Enhanced simulation\
const totalTime = jobs.reduce((sum, job) => sum + job.duration * 60, 0) + (jobs.length * 18); // Travel time + job time\
const fuelCost = (totalDistance * 0.18).toFixed(2); // Current gas prices\
const efficiency = Math.min(100, 85 + Math.random() * 10); // Route efficiency\
\
document.getElementById('total-distance').textContent = totalDistance.toFixed(1);\
document.getElementById('total-time').textContent = Math.round(totalTime);\
document.getElementById('fuel-cost').textContent = fuelCost;\
document.getElementById('route-jobs').textContent = jobs.length;\
\
routeStats.style.display = 'grid';\
routeDetails.style.display = 'block';\
\
// Display detailed route with estimated times\
routeList.innerHTML = jobs.map((job, index) => \{\
const estimatedArrival = new Date(`$\{job.date\} $\{job.time\}`);\
estimatedArrival.setMinutes(estimatedArrival.getMinutes() + (index * 25)); // Travel time between stops\
\
return `\
<div class="dashboard-card mb-3">\
<div class="d-flex items-center justify-between">\
<div style="flex: 1;">\
<div class="d-flex items-center gap-3 mb-2">\
<div style="width: 40px; height: 40px; background: $\{getJobStatusColor(job.status)\}; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">\
$\{index + 1\}\
</div>\
<div>\
<h5 style="margin: 0;">$\{job.customerName\}</h5>\
<p style="margin: 0; color: var(--dark-gray);">$\{job.address\}</p>\
</div>\
</div>\
<div style="text-align: right;">\
<div style="background: var(--lionsmane); padding: 8px 12px; border-radius: 8px; margin-bottom: 10px;">\
<strong>ETA: $\{estimatedArrival.toLocaleTimeString([], \{hour: '2-digit', minute:'2-digit'\})\}</strong>\
</div>\
<span class="badge badge-$\{job.status === 'completed' ? 'success' : job.status === 'in-progress' ? 'warning' : 'info'\}">\
$\{job.status\}\
</span>\
</div>\
</div>\
<div class="d-flex items-center justify-between mt-3">\
<div class="d-flex gap-4 text-sm">\
<span>\uc0\u55358 \u56825  $\{job.serviceType.replace('-', ' ')\}</span>\
<span>\uc0\u9201 \u65039  $\{job.duration\}h</span>\
<span>\uc0\u55357 \u56496  $\{job.estimatedCost\}</span>\
</div>\
<div class="d-flex gap-2">\
<button class="btn btn-sm btn-primary" onclick="navigateToJob($\{job.id\})">\
\uc0\u55357 \u56826 \u65039  Navigate\
</button>\
<button class="btn btn-sm btn-secondary" onclick="contactCustomer($\{job.customerId\})">\
\uc0\u55357 \u56542  Call\
</button>\
</div>\
</div>\
$\{index < jobs.length - 1 ? `\
<div class="mt-3 text-center" style="padding: 10px; background: var(--light-gray); border-radius: 8px;">\
\uc0\u8595  $\{Math.floor(Math.random() * 15) + 8\} min drive \'95 $\{(Math.random() * 3 + 2).toFixed(1)\} miles\
</div>\
` : ''\}\
</div>\
`;\
\}).join('');\
\}\
\
function getJobStatusColor(status) \{\
const colors = \{\
'scheduled': '#2196F3',\
'in-progress': '#FF9800',\
'completed': '#4CAF50'\
\};\
return colors[status] || '#6c757d';\
\}\
\
function optimizeAllRoutes() \{\
showNotification('\uc0\u55357 \u56960  Optimizing all routes with AI...', 'info');\
\
setTimeout(() => \{\
loadRoutesForDate();\
showNotification('\uc0\u9989  Routes optimized! Estimated 22% time savings and 18% fuel reduction.', 'success');\
\}, 2500);\
\}\
\
function toggleTrafficView() \{\
showNotification('\uc0\u55357 \u56998  Traffic overlay toggled', 'info');\
\}\
\
function exportGoogleMaps() \{\
const jobs = AppState.jobs.filter(j => j.date === document.getElementById('route-date')?.value);\
if (jobs.length === 0) \{\
showNotification('No jobs found for selected date', 'warning');\
return;\
\}\
\
// Create Google Maps URL with multiple waypoints\
const origin = 'Cleaning Rangers Base, St. Augustine, FL';\
const waypoints = jobs.map(job => encodeURIComponent(job.address)).join('|');\
const destination = jobs[jobs.length - 1].address;\
\
const mapsUrl = `https://www.google.com/maps/dir/$\{encodeURIComponent(origin)\}/$\{waypoints\}/$\{encodeURIComponent(destination)\}`;\
window.open(mapsUrl, '_blank');\
showNotification('\uc0\u55357 \u56525  Route exported to Google Maps!', 'success');\
\}\
\
function exportRoutes() \{\
const routeData = \{\
date: document.getElementById('route-date')?.value,\
team: document.getElementById('route-team')?.value,\
jobs: AppState.jobs.filter(j => j.date === document.getElementById('route-date')?.value),\
optimization: document.getElementById('route-optimization')?.value,\
exportTime: new Date().toISOString()\
\};\
\
const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(routeData, null, 2));\
const link = document.createElement("a");\
link.setAttribute("href", dataStr);\
link.setAttribute("download", `cleaning-rangers-routes-$\{routeData.date\}.json`);\
document.body.appendChild(link);\
link.click();\
document.body.removeChild(link);\
\
showNotification('\uc0\u55357 \u56522  Route data exported successfully!', 'success');\
\}\
\
function sendRouteToTeam() \{\
showNotification('\uc0\u55357 \u56561  Sending route to team mobile devices...', 'info');\
setTimeout(() => \{\
showNotification('\uc0\u9989  Route sent successfully to all team members!', 'success');\
\}, 1500);\
\}\
\
function printRoute() \{\
const routeContent = document.getElementById('route-list').innerHTML;\
const printWindow = window.open('', '_blank');\
\
printWindow.document.write(`\
<!DOCTYPE html>\
<html>\
<head>\
<title>Cleaning Rangers - Route Plan</title>\
<style>\
body \{ font-family: Arial, sans-serif; margin: 20px; \}\
.dashboard-card \{ margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 8px; \}\
.btn \{ display: none; \}\
@media print \{ body \{ margin: 0; \} \}\
</style>}